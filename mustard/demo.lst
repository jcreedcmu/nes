#[1]   demo.nas
    2                             .inesprg 1
    3                             .ineschr 1
    4                             .inesmir 0
    5                             .inesmap 4
    6                     
    7                     
#[3]   arg.mac
    8                             .include "arg.mac"
    1           0000      ARG_NONE        .equ 0
    2           0001      ARG_REG         .equ 1
    3           0002      ARG_IMMED       .equ 2
    4           0003      ARG_ABS         .equ 3
    5           0003      ARG_ABSOLUTE    .equ 3
    6           0004      ARG_INDIRECT    .equ 4
    7           0005      ARG_STRING      .equ 5
    8           0006      ARG_LABEL       .equ 6
#[2]   header.nas
#[3]   common.mac
    9                             .include "common.mac"
    1                     ; mov src, dst
    2                     ; dst := [src]
    3                     mova    .macro
    4                             sta \1
    5                             .endm
    6                     movx    .macro
    7                             stx \1
    8                             .endm
    9                     movy    .macro
   10                             sty \1
   11                             .endm
   12                     mov     .macro
   13                             .if \?1 = ARG_REG
   14                             st\1 \2
   15                             .else
   16                             lda \1
   17                             sta \2
   18                             .endif
   19                             .endm
   20                     
   21                     ; mov16 src16, dst16
   22                     ; dst16 := [src16]
   23                     
   24                     ; mov16 #src16, dst16
   25                     ; dst16 := src16
   26                     mov16   .macro
   27                             .if \?1 = ARG_IMMED
   28                             mov #low(\1), \2
   29                             mov #high(\1), \2+1
   30                             .else
   31                             mov \1, \2
   32                             mov \1+1, \2+1
   33                             .endif
   34                             .endm
   35                     
   36                     ; mov16 src16, dst16
   37                     ; dst16 := [src16 + x]
   38                     mov16sx .macro
   39                             lda \1,x
   40                             sta \2
   41                             lda \1+1,x
   42                             sta \2+1
   43                             .endm
   44                     
   45                     
   46                     ; add16 dst16, src16
   47                     ; dst16 := [dst16] + [src16]
   48                     
   49                     ; add16 dst16, #val16
   50                     ; dst16 := [dst16] + val16
   51                     add16   .macro
   52                             clc
   53                             .if \?2 = ARG_IMMED
   54                             lda \1
   55                             adc #low(\2)
   56                             sta \1
   57                             lda \1+1
   58                             adc #high(\2)
   59                             sta \1+1
   60                             .else
   61                             lda \1
   62                             adc \2
   63                             sta \1
   64                             lda \1+1
   65                             adc \2+1
   66                             sta \1+1
   67                             .endif
   68                             .endm
   69                     
   70                     ; inc16 dst16
   71                     ; dst16 := [dst16] + 1
   72                     inc16   .macro
   73                             add16 \1, #1
   74                             .endm
   75                     
   76                     
   77                     ; some ppu stuff
   78           3F00      bgpal   .equ $3f00
   79           2020      bgnam   .equ $2020
   80                     
   81                     ppua    .macro
   82                             .if \?1 = ARG_IMMED
   83                             mov #high(\1), $2006
   84                             mov #low(\1), $2006
   85                             .else
   86                             mov \1+1, $2006
   87                             mov \1, $2006
   88                             .endif
   89                             .endm
   90                     
   91                     ppuw    .macro
   92                             mov \1, $2007
   93                             .endm
   94                     
   95                     
   96                     ; get a joystick button
   97                     get_button      .macro 
   98                             lda $4016
   99                             and #1
  100                             sta \1
  101                             .endm
#[2]   header.nas
#[3]   thread.mac
   10                             .include "thread.mac"
    1                     ;;;
    2                     ;;; Crazy threading macros!
    3                     ;;;
    4                     
    5                     do_thread       .macro
    6                             lda thread_mask
    7                             and #(1 << \1)
    8                             beq .quit\@
    9                             mov16 thread\1_loc, loc
   10                             mov thread\1_counter, counter
   11                             .if (\1 < 4)
   12                             mov16 #($4000 + (\1 * 4)), soundreg
   13                             .endif
   14                     .continue\@:
   15                             jsr do_thread_handler
   16                             lda continue
   17                             bne .continue\@
   18                             mov16 loc, thread\1_loc
   19                             mov counter, thread\1_counter
   20                     .quit\@:
   21                             .endm
   22                     
   23                     
   24                     ynext   .macro
   25                             add16 loc, #(.num_args+1)
   26                             rts
   27                             .endm
   28                     
   29                     next    .macro
   30                             mov #1, continue
   31                             add16 loc, #(.num_args+1)
   32                             rts
   33                             .endm
   34                     
   35                     yredo   .macro
   36                             rts
   37                             .endm
   38                     
   39                     mft_entry       .macro
   40                     mf_\1_loc:
   41                             .dw mf_\1_handler
   42                             .endm
   43                     
   44                     mf      .macro
   45                             .db (mf_\1_loc - mft)*2 + 3
   46                             .if (\# >= 2)
   47                             .db \2
   48                             .endif
   49                             .if (\# >= 3)
   50                             .db \3
   51                             .endif
   52                             .if (\# >= 4)
   53                             .db \4
   54                             .endif
   55                             .endm
   56                     
   57                     ldarg   .macro
   58                             .if (\# > 0)
   59                             ldy #\1
   60                             lda [loc],y
   61                             .else
   62                             ldy #1
   63                             lda [loc],y
   64                             .endif
   65                             .endm
   66                     
   67                     starg   .macro
   68                             .if (\# > 0)
   69                             ldy #\1
   70                             lda [loc],y
   71                             sta arg\1
   72                             .else
   73                             ldy #1
   74                             lda [loc],y
   75                             sta arg1
   76                             .endif
   77                             .endm
   78                     
   79                     yhere   .macro
   80                             jsr yield_handler
   81                             .endm
   82                     
   83                     here    .macro
   84                             mov #1, continue
   85                             jsr yield_handler
   86                             .endm
   87                     
   88                     
   89                     ; use at the beginning of an mf_handler
   90                     ; that incorporates a delay. The argument
   91                     ; to delay_header is the index of the
   92                     ; argument to the mf that contains the
   93                     ; delay amount.
   94                     delay_header    .macro
   95                             lda counter
   96                             bne .decrement
   97                             ldarg \1
   98                             beq .quit
   99                             sta counter
  100                             .endm
  101                     
  102                     delay_footer    .macro
  103                             yredo
  104                     .decrement:
  105                             dec counter
  106                             beq .quit
  107                             yredo
  108                     .quit:
  109                             next
  110                             .endm
  111                     
  112                     ; similarly put this at the end
  113                     
  114                     mf_handler      .macro
  115                     mf_\1_handler:
  116                     .num_args .equ \2
  117                             .endm
  118                     
  119                     
  120                     do_threads      .macro
  121                             do_thread 0
  122                             do_thread 1
  123                             do_thread 2
  124                             do_thread 3
  125                             do_thread 4
  126                             do_thread 5
  127                             do_thread 6
  128                             do_thread 7
  129                             .endm
  130                     
  131                     threads_init    .macro
  132                             mov #0, thread_mask
  133                             mov #0, thread0_counter
  134                             mov #0, thread1_counter
  135                             mov #0, thread2_counter
  136                             mov #0, thread3_counter
  137                             mov #0, thread4_counter
  138                             mov #0, thread5_counter
  139                             mov #0, thread6_counter
  140                             mov #0, thread7_counter
  141                             .endm
  142                     
  143                     thread_on       .macro
  144                             lda thread_mask
  145                             ora #(1 << \1)
  146                             sta thread_mask
  147                             .endm
  148                     
  149                     set_thread      .macro
  150                             mov #0, thread\1_counter
  151                             mov16 #\2, thread\1_loc
  152                             .endm
  153                     
  154                     start_thread    .macro
  155                             mov #0, thread\1_counter
  156                             mov16 #\2, thread\1_loc
  157                             thread_on \1
  158                             .endm
  159                     
  160                     thread_off      .macro
  161                             lda thread_mask
  162                             and #(~(1 << \1))
  163                             sta thread_mask
  164                             .endm
#[2]   header.nas
#[3]   yourturntowin.mac
   11                             .include "yourturntowin.mac"
    1                     pat_your_turn_to_win_3a .macro
    2                             here
    3                             thread_on 4
    4                             here
    5                             mf rest, 9
    6                             mf specialx, 9
    7                             mf rest, 9
    8                             thread_on 4
    9                             here
   10                             mf specialy, 9
   11                             mf specialx, 9
   12                             mf rest, 9
   13                             thread_on 4
   14                             here
   15                             mf specialy, 9
   16                             mf specialx, 9
   17                             .endm
   18                     
   19                     pat_your_turn_to_win_3b .macro
   20                             here
   21                             thread_on 4
   22                             here
   23                             mf specialx, 9
   24                             thread_on 4
   25                             here
   26                             mf specialx, 9
   27                             thread_on 4
   28                             here
   29                             mf specialx, 9
   30                             thread_on 4
   31                             here
   32                             mf specialx, 9
   33                             mf rest, 36
   34                             .endm
   35                     
   36                     pat_your_turn_to_win_0_c        .macro
   37                             here
   38                             mf note, 18, 171, 1
   39                             .endm
   40                     
   41                     pat_your_turn_to_win_0_cmaj7    .macro
   42                             here
   43                             mf note, 18, 171, 1
   44                             .endm
   45                     
   46                     pat_your_turn_to_win_0_em       .macro
   47                             here
   48                             mf note, 18, 83, 1
   49                             mf note, 18, 83, 1
   50                             mf note, 9, 29, 1
   51                             mf note, 9, 197, 1
   52                             mf note, 18, 83, 1
   53                             .endm
   54                     
   55                     pat_your_turn_to_win_0_f        .macro
   56                             here
   57                             mf note, 18, 64, 1
   58                             .endm
   59                     
   60                     pat_your_turn_to_win_0_dm7      .macro
   61                             here
   62                             mf note, 18, 124, 1
   63                             mf note, 18, 64, 1
   64                             mf note, 18, 254, 0
   65                             mf note, 18, 213, 0
   66                             .endm
   67                     
   68                     pat_your_turn_to_win_0_g7       .macro
   69                             here
   70                             mf note, 18, 29, 1
   71                             mf note, 18, 226, 0
   72                             mf note, 18, 190, 0
   73                             mf note, 18, 160, 0
   74                             .endm
   75                     
   76                     pat_your_turn_to_win_0_g        .macro
   77                             here
   78                             mf note, 9, 29, 1
   79                             .endm
   80                     
   81                     pat_your_turn_to_win_0_c9       .macro
   82                             here
   83                             mf note, 18, 171, 1
   84                             mf note, 18, 83, 1
   85                             mf note, 18, 29, 1
   86                             mf note, 18, 239, 0
   87                             .endm
   88                     
   89                     pat_your_turn_to_win_1  .macro
   90                             here
   91                             mf note, 9, 213, 0
   92                             mf note, 9, 190, 0
   93                             mf note, 9, 169, 0
   94                             mf note, 9, 213, 0
   95                             mf note, 9, 190, 0
   96                             mf note, 9, 169, 0
   97                             mf note, 9, 213, 0
   98                             mf note, 9, 190, 0
   99                             mf note, 9, 169, 0
  100                             mf note, 9, 213, 0
  101                             mf note, 9, 190, 0
  102                             mf note, 9, 169, 0
  103                             mf note, 9, 213, 0
  104                             mf note, 9, 190, 0
  105                             mf note, 9, 169, 0
  106                             mf note, 9, 213, 0
  107                             mf sthr0
  108                             .dw your_turn_to_win_0_em
  109                             mf note, 72, 142, 0
  110                             mf rest, 72
  111                             mf sthr0
  112                             .dw your_turn_to_win_0_cmaj7
  113                             mf note, 9, 213, 0
  114                             mf note, 9, 190, 0
  115                             mf note, 9, 169, 0
  116                             mf note, 9, 213, 0
  117                             mf note, 9, 190, 0
  118                             mf note, 9, 169, 0
  119                             mf note, 9, 213, 0
  120                             mf note, 9, 190, 0
  121                             mf note, 9, 169, 0
  122                             mf note, 9, 213, 0
  123                             mf note, 9, 190, 0
  124                             mf note, 9, 169, 0
  125                             mf note, 9, 213, 0
  126                             mf note, 9, 190, 0
  127                             mf note, 9, 169, 0
  128                             mf note, 9, 213, 0
  129                             mf sthr0
  130                             .dw your_turn_to_win_0_em
  131                             mf note, 27, 113, 0
  132                             mf note, 36, 142, 0
  133                             mf rest, 9
  134                             mf sthr0
  135                             .dw your_turn_to_win_0_c9
  136                             mf rest, 72
  137                             mf sthr3
  138                             .dw your_turn_to_win_3b
  139                             mf sthr0
  140                             .dw your_turn_to_win_0_f
  141                             mf note, 27, 106, 0
  142                             mf note, 27, 127, 0
  143                             mf note, 18, 106, 0
  144                             mf sthr0
  145                             .dw your_turn_to_win_0_em
  146                             mf note, 27, 113, 0
  147                             mf note, 27, 142, 0
  148                             mf rest, 18
  149                             mf sthr0
  150                             .dw your_turn_to_win_0_dm7
  151                             mf note, 27, 127, 0
  152                             mf sthr0
  153                             .dw your_turn_to_win_0_g7
  154                             mf note, 15, 160, 0
  155                             mf note, 15, 142, 0
  156                             mf note, 15, 127, 0
  157                             mf sthr0
  158                             .dw your_turn_to_win_0_c
  159                             mf note, 72, 142, 0
  160                             mf sthr0
  161                             .dw your_turn_to_win_0_f
  162                             mf note, 27, 106, 0
  163                             mf note, 27, 113, 0
  164                             mf note, 18, 127, 0
  165                             mf sthr0
  166                             .dw your_turn_to_win_0_em
  167                             mf note, 27, 142, 0
  168                             mf note, 27, 160, 0
  169                             mf note, 18, 169, 0
  170                             mf sthr0
  171                             .dw your_turn_to_win_0_dm7
  172                             mf note, 18, 190, 0
  173                             mf note, 9, 213, 0
  174                             mf sthr0
  175                             .dw your_turn_to_win_0_g7
  176                             mf note, 9, 226, 0
  177                             mf rest, 9
  178                             mf note, 9, 190, 0
  179                             mf sthr0
  180                             .dw your_turn_to_win_0_c
  181                             mf note, 9, 213, 0
  182                             mf rest, 9
  183                             mf sthr0
  184                             .dw your_turn_to_win_0_c
  185                             mf rest, 36
  186                             mf sthr0
  187                             .dw your_turn_to_win_0_g
  188                             mf rest, 36
  189                             mf sthr0
  190                             .dw your_turn_to_win_0_cmaj7
  191                             mf sthr3
  192                             .dw your_turn_to_win_3a
  193                             .endm
  194                     
  195                     
  196                     all_songs       .macro
  197                     your_turn_to_win_3a:
  198                             pat_your_turn_to_win_3a
  199                             jmp your_turn_to_win_3a
  200                     your_turn_to_win_3b:
  201                             pat_your_turn_to_win_3b
  202                             jmp your_turn_to_win_3b
  203                     your_turn_to_win_0_c:
  204                             pat_your_turn_to_win_0_c
  205                             jmp your_turn_to_win_0_c
  206                     your_turn_to_win_0_cmaj7:
  207                             pat_your_turn_to_win_0_cmaj7
  208                             jmp your_turn_to_win_0_cmaj7
  209                     your_turn_to_win_0_em:
  210                             pat_your_turn_to_win_0_em
  211                             jmp your_turn_to_win_0_em
  212                     your_turn_to_win_0_f:
  213                             pat_your_turn_to_win_0_f
  214                             jmp your_turn_to_win_0_f
  215                     your_turn_to_win_0_dm7:
  216                             pat_your_turn_to_win_0_dm7
  217                             jmp your_turn_to_win_0_dm7
  218                     your_turn_to_win_0_g7:
  219                             pat_your_turn_to_win_0_g7
  220                             jmp your_turn_to_win_0_g7
  221                     your_turn_to_win_0_g:
  222                             pat_your_turn_to_win_0_g
  223                             jmp your_turn_to_win_0_g
  224                     your_turn_to_win_0_c9:
  225                             pat_your_turn_to_win_0_c9
  226                             jmp your_turn_to_win_0_c9
  227                     your_turn_to_win_1:
  228                             pat_your_turn_to_win_1
  229                             jmp your_turn_to_win_1
  230                             .endm
  231                     
#[2]   header.nas
#[3]   debug.mac
   12                             .include "debug.mac"
    1                     debug   .macro
    2                             mov #0, $2009
    3                             mov loc+1, $2008
    4                             mov loc, $2008
    5                             .endm
#[2]   header.nas
   13                     
   14           0000              .bank 0
   15           8000              .org $8000
   16                     
#[3]   mf.inc
   17                             .include "mf.inc"
    1                     ;;;;;;;;;;;;;;;;;;;;;;
    2                     ;;; function table ;;;
    3                     ;;;;;;;;;;;;;;;;;;;;;;
    4                     
    5  00:8000            mft:
    6                             mft_entry del
       00:8000            mf_del_loc:
       00:8000  16 80             .dw mf_del_handler
    7                             mft_entry rest
       00:8002            mf_rest_loc:
       00:8002  42 80             .dw mf_rest_handler
    8                             mft_entry zero
       00:8004            mf_zero_loc:
       00:8004  7F 80             .dw mf_zero_handler
    9                             mft_entry specialx
       00:8006            mf_specialx_loc:
       00:8006  BC 80             .dw mf_specialx_handler
   10                             mft_entry specialy
       00:8008            mf_specialy_loc:
       00:8008  13 81             .dw mf_specialy_handler
   11                             mft_entry specialw
       00:800A            mf_specialw_loc:
       00:800A  6A 81             .dw mf_specialw_handler
   12                             mft_entry note
       00:800C            mf_note_loc:
       00:800C  C1 81             .dw mf_note_handler
   13                             mft_entry note_long
       00:800E            mf_note_long_loc:
       00:800E  12 82             .dw mf_note_long_handler
   14                             mft_entry note_tri
       00:8010            mf_note_tri_loc:
       00:8010  65 82             .dw mf_note_tri_handler
   15                             mft_entry sthr0
       00:8012            mf_sthr0_loc:
       00:8012  B8 82             .dw mf_sthr0_handler
   16                             mft_entry sthr3
       00:8014            mf_sthr3_loc:
       00:8014  E9 82             .dw mf_sthr3_handler
   17                     
   18                     ;;;;;;;;;;;
   19                     ;;; del ;;;
   20                     ;;;;;;;;;;;
   21                     
   22                             mf_handler del, 1
       00:8016            mf_del_handler:
                0001      .num_args .equ 1
   23                             delay_header 1
       00:8016  AD 1E 00          lda counter
       00:8019  D0 0A             bne .decrement
                                  ldarg 1
                0001              .if (1 > 0)
       00:801B  A0 01             ldy #1
       00:801D  B1 1C             lda [loc],y
                                  .else
                                  .endif
       00:801F  F0 0A             beq .quit
       00:8021  8D 1E 00          sta counter
   24                             delay_footer
                                  yredo
       00:8024  60                rts
       00:8025            .decrement:
       00:8025  CE 1E 00          dec counter
       00:8028  F0 01             beq .quit
                                  yredo
       00:802A  60                rts
       00:802B            .quit:
                                  next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:802B  A9 01             lda #1
       00:802D  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:8030  18                clc
                0001              .if 2 = ARG_IMMED
       00:8031  AD 1C 00          lda loc
       00:8034  69 02             adc #low(#(.num_args+1))
       00:8036  8D 1C 00          sta loc
       00:8039  AD 1D 00          lda loc+1
       00:803C  69 00             adc #high(#(.num_args+1))
       00:803E  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:8041  60                rts
   25                     
   26                     ;;;;;;;;;;;;
   27                     ;;; rest ;;;
   28                     ;;;;;;;;;;;;
   29                     
   30                             mf_handler rest, 1
       00:8042            mf_rest_handler:
                0001      .num_args .equ 1
   31                             delay_header 1
       00:8042  AD 1E 00          lda counter
       00:8045  D0 1B             bne .decrement
                                  ldarg 1
                0001              .if (1 > 0)
       00:8047  A0 01             ldy #1
       00:8049  B1 1C             lda [loc],y
                                  .else
                                  .endif
       00:804B  F0 1B             beq .quit
       00:804D  8D 1E 00          sta counter
   32  00:8050  A9 10             lda #$10
   33  00:8052  A0 00             ldy #0
   34  00:8054  91 18             sta [soundreg],y
   35  00:8056  C8                iny
   36  00:8057  A9 00             lda #0
   37  00:8059  91 18             sta [soundreg],y
   38  00:805B  C8                iny
   39  00:805C  91 18             sta [soundreg],y
   40  00:805E  C8                iny
   41  00:805F  91 18             sta [soundreg],y
   42                             delay_footer
                                  yredo
       00:8061  60                rts
       00:8062            .decrement:
       00:8062  CE 1E 00          dec counter
       00:8065  F0 01             beq .quit
                                  yredo
       00:8067  60                rts
       00:8068            .quit:
                                  next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8068  A9 01             lda #1
       00:806A  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:806D  18                clc
                0001              .if 2 = ARG_IMMED
       00:806E  AD 1C 00          lda loc
       00:8071  69 02             adc #low(#(.num_args+1))
       00:8073  8D 1C 00          sta loc
       00:8076  AD 1D 00          lda loc+1
       00:8079  69 00             adc #high(#(.num_args+1))
       00:807B  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:807E  60                rts
   43                     
   44                     ;;;;;;;;;;;;
   45                     ;;; zero ;;;
   46                     ;;;;;;;;;;;;
   47                     
   48                             mf_handler zero, 1
       00:807F            mf_zero_handler:
                0001      .num_args .equ 1
   49                             delay_header 1
       00:807F  AD 1E 00          lda counter
       00:8082  D0 1B             bne .decrement
                                  ldarg 1
                0001              .if (1 > 0)
       00:8084  A0 01             ldy #1
       00:8086  B1 1C             lda [loc],y
                                  .else
                                  .endif
       00:8088  F0 1B             beq .quit
       00:808A  8D 1E 00          sta counter
   50  00:808D  A9 00             lda #$0
   51  00:808F  A0 00             ldy #0
   52  00:8091  91 18             sta [soundreg],y
   53  00:8093  C8                iny
   54  00:8094  A9 00             lda #0
   55  00:8096  91 18             sta [soundreg],y
   56  00:8098  C8                iny
   57  00:8099  91 18             sta [soundreg],y
   58  00:809B  C8                iny
   59  00:809C  91 18             sta [soundreg],y
   60                             delay_footer
                                  yredo
       00:809E  60                rts
       00:809F            .decrement:
       00:809F  CE 1E 00          dec counter
       00:80A2  F0 01             beq .quit
                                  yredo
       00:80A4  60                rts
       00:80A5            .quit:
                                  next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:80A5  A9 01             lda #1
       00:80A7  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:80AA  18                clc
                0001              .if 2 = ARG_IMMED
       00:80AB  AD 1C 00          lda loc
       00:80AE  69 02             adc #low(#(.num_args+1))
       00:80B0  8D 1C 00          sta loc
       00:80B3  AD 1D 00          lda loc+1
       00:80B6  69 00             adc #high(#(.num_args+1))
       00:80B8  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:80BB  60                rts
   61                     
   62                     ;;;;;;;;;;;;;;;;
   63                     ;;; specialx ;;;
   64                     ;;;;;;;;;;;;;;;;
   65                     
   66                             mf_handler specialx, 1
       00:80BC            mf_specialx_handler:
                0001      .num_args .equ 1
   67                             delay_header 1
       00:80BC  AD 1E 00          lda counter
       00:80BF  D0 1E             bne .decrement
                                  ldarg 1
                0001              .if (1 > 0)
       00:80C1  A0 01             ldy #1
       00:80C3  B1 1C             lda [loc],y
                                  .else
                                  .endif
       00:80C5  F0 1E             beq .quit
       00:80C7  8D 1E 00          sta counter
   68                             mov #1, $400c
                0000              .if 2 = ARG_REG
                                  .else
       00:80CA  A9 01             lda #1
       00:80CC  8D 0C 40          sta $400c
                                  .endif
   69                             mov #0, $400d
                0000              .if 2 = ARG_REG
                                  .else
       00:80CF  A9 00             lda #0
       00:80D1  8D 0D 40          sta $400d
                                  .endif
   70                             mov #2, $400e
                0000              .if 2 = ARG_REG
                                  .else
       00:80D4  A9 02             lda #2
       00:80D6  8D 0E 40          sta $400e
                                  .endif
   71                             mov #0, $400f
                0000              .if 2 = ARG_REG
                                  .else
       00:80D9  A9 00             lda #0
       00:80DB  8D 0F 40          sta $400f
                                  .endif
   72                             delay_footer
                                  yredo
       00:80DE  60                rts
       00:80DF            .decrement:
       00:80DF  CE 1E 00          dec counter
       00:80E2  F0 01             beq .quit
                                  yredo
       00:80E4  60                rts
       00:80E5            .quit:
                                  next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:80E5  A9 01             lda #1
       00:80E7  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:80EA  18                clc
                0001              .if 2 = ARG_IMMED
       00:80EB  AD 1C 00          lda loc
       00:80EE  69 02             adc #low(#(.num_args+1))
       00:80F0  8D 1C 00          sta loc
       00:80F3  AD 1D 00          lda loc+1
       00:80F6  69 00             adc #high(#(.num_args+1))
       00:80F8  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:80FB  60                rts
   73                             next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:80FC  A9 01             lda #1
       00:80FE  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:8101  18                clc
                0001              .if 2 = ARG_IMMED
       00:8102  AD 1C 00          lda loc
       00:8105  69 02             adc #low(#(.num_args+1))
       00:8107  8D 1C 00          sta loc
       00:810A  AD 1D 00          lda loc+1
       00:810D  69 00             adc #high(#(.num_args+1))
       00:810F  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:8112  60                rts
   74                     
   75                     ;;;;;;;;;;;;;;;;
   76                     ;;; specialy ;;;
   77                     ;;;;;;;;;;;;;;;;
   78                     
   79                             mf_handler specialy, 1
       00:8113            mf_specialy_handler:
                0001      .num_args .equ 1
   80                             delay_header 1
       00:8113  AD 1E 00          lda counter
       00:8116  D0 1E             bne .decrement
                                  ldarg 1
                0001              .if (1 > 0)
       00:8118  A0 01             ldy #1
       00:811A  B1 1C             lda [loc],y
                                  .else
                                  .endif
       00:811C  F0 1E             beq .quit
       00:811E  8D 1E 00          sta counter
   81                             mov #1, $400c
                0000              .if 2 = ARG_REG
                                  .else
       00:8121  A9 01             lda #1
       00:8123  8D 0C 40          sta $400c
                                  .endif
   82                             mov #0, $400d
                0000              .if 2 = ARG_REG
                                  .else
       00:8126  A9 00             lda #0
       00:8128  8D 0D 40          sta $400d
                                  .endif
   83                             mov #7, $400e
                0000              .if 2 = ARG_REG
                                  .else
       00:812B  A9 07             lda #7
       00:812D  8D 0E 40          sta $400e
                                  .endif
   84                             mov #$f8, $400f
                0000              .if 2 = ARG_REG
                                  .else
       00:8130  A9 F8             lda #$f8
       00:8132  8D 0F 40          sta $400f
                                  .endif
   85                             delay_footer
                                  yredo
       00:8135  60                rts
       00:8136            .decrement:
       00:8136  CE 1E 00          dec counter
       00:8139  F0 01             beq .quit
                                  yredo
       00:813B  60                rts
       00:813C            .quit:
                                  next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:813C  A9 01             lda #1
       00:813E  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:8141  18                clc
                0001              .if 2 = ARG_IMMED
       00:8142  AD 1C 00          lda loc
       00:8145  69 02             adc #low(#(.num_args+1))
       00:8147  8D 1C 00          sta loc
       00:814A  AD 1D 00          lda loc+1
       00:814D  69 00             adc #high(#(.num_args+1))
       00:814F  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:8152  60                rts
   86                             next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8153  A9 01             lda #1
       00:8155  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:8158  18                clc
                0001              .if 2 = ARG_IMMED
       00:8159  AD 1C 00          lda loc
       00:815C  69 02             adc #low(#(.num_args+1))
       00:815E  8D 1C 00          sta loc
       00:8161  AD 1D 00          lda loc+1
       00:8164  69 00             adc #high(#(.num_args+1))
       00:8166  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:8169  60                rts
   87                     
   88                     ;;;;;;;;;;;;;;;;
   89                     ;;; specialw ;;;
   90                     ;;;;;;;;;;;;;;;;
   91                     
   92                             mf_handler specialw, 1
       00:816A            mf_specialw_handler:
                0001      .num_args .equ 1
   93                             delay_header 1
       00:816A  AD 1E 00          lda counter
       00:816D  D0 1E             bne .decrement
                                  ldarg 1
                0001              .if (1 > 0)
       00:816F  A0 01             ldy #1
       00:8171  B1 1C             lda [loc],y
                                  .else
                                  .endif
       00:8173  F0 1E             beq .quit
       00:8175  8D 1E 00          sta counter
   94                             mov #$03, $400c
                0000              .if 2 = ARG_REG
                                  .else
       00:8178  A9 03             lda #$03
       00:817A  8D 0C 40          sta $400c
                                  .endif
   95                             mov #$00, $400d
                0000              .if 2 = ARG_REG
                                  .else
       00:817D  A9 00             lda #$00
       00:817F  8D 0D 40          sta $400d
                                  .endif
   96                             mov #$0f, $400e
                0000              .if 2 = ARG_REG
                                  .else
       00:8182  A9 0F             lda #$0f
       00:8184  8D 0E 40          sta $400e
                                  .endif
   97                             mov #$78, $400f
                0000              .if 2 = ARG_REG
                                  .else
       00:8187  A9 78             lda #$78
       00:8189  8D 0F 40          sta $400f
                                  .endif
   98                             delay_footer
                                  yredo
       00:818C  60                rts
       00:818D            .decrement:
       00:818D  CE 1E 00          dec counter
       00:8190  F0 01             beq .quit
                                  yredo
       00:8192  60                rts
       00:8193            .quit:
                                  next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8193  A9 01             lda #1
       00:8195  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:8198  18                clc
                0001              .if 2 = ARG_IMMED
       00:8199  AD 1C 00          lda loc
       00:819C  69 02             adc #low(#(.num_args+1))
       00:819E  8D 1C 00          sta loc
       00:81A1  AD 1D 00          lda loc+1
       00:81A4  69 00             adc #high(#(.num_args+1))
       00:81A6  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:81A9  60                rts
   99                             next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:81AA  A9 01             lda #1
       00:81AC  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:81AF  18                clc
                0001              .if 2 = ARG_IMMED
       00:81B0  AD 1C 00          lda loc
       00:81B3  69 02             adc #low(#(.num_args+1))
       00:81B5  8D 1C 00          sta loc
       00:81B8  AD 1D 00          lda loc+1
       00:81BB  69 00             adc #high(#(.num_args+1))
       00:81BD  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:81C0  60                rts
  100                     
  101                     
  102                     ;;;;;;;;;;;;
  103                     ;;; note ;;;
  104                     ;;;;;;;;;;;;
  105                     
  106                             mf_handler note, 3
       00:81C1            mf_note_handler:
                0003      .num_args .equ 3
  107                             delay_header 1
       00:81C1  AD 1E 00          lda counter
       00:81C4  D0 2F             bne .decrement
                                  ldarg 1
                0001              .if (1 > 0)
       00:81C6  A0 01             ldy #1
       00:81C8  B1 1C             lda [loc],y
                                  .else
                                  .endif
       00:81CA  F0 2F             beq .quit
       00:81CC  8D 1E 00          sta counter
  108                             starg 2
                0001              .if (1 > 0)
       00:81CF  A0 02             ldy #2
       00:81D1  B1 1C             lda [loc],y
       00:81D3  8D 22 00          sta arg2
                                  .else
                                  .endif
  109                             starg 3
                0001              .if (1 > 0)
       00:81D6  A0 03             ldy #3
       00:81D8  B1 1C             lda [loc],y
       00:81DA  8D 23 00          sta arg3
                                  .else
                                  .endif
  110  00:81DD  A0 00             ldy #0
  111  00:81DF  A9 97             lda #%10010111
  112  00:81E1  91 18             sta [soundreg],y
  113  00:81E3  C8                iny
  114  00:81E4  A9 08             lda #%00001000
  115  00:81E6  91 18             sta [soundreg],y
  116  00:81E8  C8                iny
  117  00:81E9  AD 22 00          lda arg2
  118  00:81EC  91 18             sta [soundreg],y
  119  00:81EE  C8                iny
  120  00:81EF  AD 23 00          lda arg3
  121  00:81F2  91 18             sta [soundreg],y
  122                             delay_footer
                                  yredo
       00:81F4  60                rts
       00:81F5            .decrement:
       00:81F5  CE 1E 00          dec counter
       00:81F8  F0 01             beq .quit
                                  yredo
       00:81FA  60                rts
       00:81FB            .quit:
                                  next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:81FB  A9 01             lda #1
       00:81FD  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:8200  18                clc
                0001              .if 2 = ARG_IMMED
       00:8201  AD 1C 00          lda loc
       00:8204  69 04             adc #low(#(.num_args+1))
       00:8206  8D 1C 00          sta loc
       00:8209  AD 1D 00          lda loc+1
       00:820C  69 00             adc #high(#(.num_args+1))
       00:820E  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:8211  60                rts
  123                     
  124                     ;;;;;;;;;;;;;;;;;
  125                     ;;; note_long ;;;
  126                     ;;;;;;;;;;;;;;;;;
  127                     
  128                             mf_handler note_long, 3
       00:8212            mf_note_long_handler:
                0003      .num_args .equ 3
  129                             delay_header 1
       00:8212  AD 1E 00          lda counter
       00:8215  D0 31             bne .decrement
                                  ldarg 1
                0001              .if (1 > 0)
       00:8217  A0 01             ldy #1
       00:8219  B1 1C             lda [loc],y
                                  .else
                                  .endif
       00:821B  F0 31             beq .quit
       00:821D  8D 1E 00          sta counter
  130                             starg 2
                0001              .if (1 > 0)
       00:8220  A0 02             ldy #2
       00:8222  B1 1C             lda [loc],y
       00:8224  8D 22 00          sta arg2
                                  .else
                                  .endif
  131                             starg 3
                0001              .if (1 > 0)
       00:8227  A0 03             ldy #3
       00:8229  B1 1C             lda [loc],y
       00:822B  8D 23 00          sta arg3
                                  .else
                                  .endif
  132  00:822E  A0 00             ldy #0
  133  00:8230  A9 92             lda #%10010010
  134  00:8232  91 18             sta [soundreg],y
  135  00:8234  C8                iny
  136  00:8235  A9 08             lda #%00001000
  137  00:8237  91 18             sta [soundreg],y
  138  00:8239  C8                iny
  139  00:823A  AD 22 00          lda arg2
  140  00:823D  91 18             sta [soundreg],y
  141  00:823F  C8                iny
  142  00:8240  AD 23 00          lda arg3
  143  00:8243  09 08             ora #%00001000
  144  00:8245  91 18             sta [soundreg],y
  145                             delay_footer
                                  yredo
       00:8247  60                rts
       00:8248            .decrement:
       00:8248  CE 1E 00          dec counter
       00:824B  F0 01             beq .quit
                                  yredo
       00:824D  60                rts
       00:824E            .quit:
                                  next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:824E  A9 01             lda #1
       00:8250  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:8253  18                clc
                0001              .if 2 = ARG_IMMED
       00:8254  AD 1C 00          lda loc
       00:8257  69 04             adc #low(#(.num_args+1))
       00:8259  8D 1C 00          sta loc
       00:825C  AD 1D 00          lda loc+1
       00:825F  69 00             adc #high(#(.num_args+1))
       00:8261  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:8264  60                rts
  146                     
  147                     ;;;;;;;;;;;;;;;;
  148                     ;;; note_tri ;;;
  149                     ;;;;;;;;;;;;;;;;
  150                     
  151                             mf_handler note_tri, 3
       00:8265            mf_note_tri_handler:
                0003      .num_args .equ 3
  152                             delay_header 1
       00:8265  AD 1E 00          lda counter
       00:8268  D0 31             bne .decrement
                                  ldarg 1
                0001              .if (1 > 0)
       00:826A  A0 01             ldy #1
       00:826C  B1 1C             lda [loc],y
                                  .else
                                  .endif
       00:826E  F0 31             beq .quit
       00:8270  8D 1E 00          sta counter
  153                             starg 2
                0001              .if (1 > 0)
       00:8273  A0 02             ldy #2
       00:8275  B1 1C             lda [loc],y
       00:8277  8D 22 00          sta arg2
                                  .else
                                  .endif
  154                             starg 3
                0001              .if (1 > 0)
       00:827A  A0 03             ldy #3
       00:827C  B1 1C             lda [loc],y
       00:827E  8D 23 00          sta arg3
                                  .else
                                  .endif
  155  00:8281  A0 00             ldy #0
  156  00:8283  A9 3F             lda #%00111111
  157  00:8285  91 18             sta [soundreg],y
  158  00:8287  C8                iny
  159  00:8288  A9 00             lda #%00000000
  160  00:828A  91 18             sta [soundreg],y
  161  00:828C  C8                iny
  162  00:828D  AD 22 00          lda arg2
  163  00:8290  91 18             sta [soundreg],y
  164  00:8292  C8                iny
  165  00:8293  AD 23 00          lda arg3
  166  00:8296  09 00             ora #%00000000
  167  00:8298  91 18             sta [soundreg],y
  168                             delay_footer
                                  yredo
       00:829A  60                rts
       00:829B            .decrement:
       00:829B  CE 1E 00          dec counter
       00:829E  F0 01             beq .quit
                                  yredo
       00:82A0  60                rts
       00:82A1            .quit:
                                  next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:82A1  A9 01             lda #1
       00:82A3  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:82A6  18                clc
                0001              .if 2 = ARG_IMMED
       00:82A7  AD 1C 00          lda loc
       00:82AA  69 04             adc #low(#(.num_args+1))
       00:82AC  8D 1C 00          sta loc
       00:82AF  AD 1D 00          lda loc+1
       00:82B2  69 00             adc #high(#(.num_args+1))
       00:82B4  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:82B7  60                rts
  169                     
  170                     ;;;;;;;;;;;;;
  171                     ;;; sthr0 ;;;
  172                     ;;;;;;;;;;;;;
  173                     
  174                             mf_handler sthr0, 2
       00:82B8            mf_sthr0_handler:
                0002      .num_args .equ 2
  175                             mov #0, thread0_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:82B8  A9 00             lda #0
       00:82BA  8D 10 00          sta thread0_counter
                                  .endif
  176  00:82BD  A0 01             ldy #1
  177  00:82BF  B1 1C             lda [loc],y
  178  00:82C1  8D 00 00          sta thread0_loc
  179  00:82C4  C8                iny
  180  00:82C5  B1 1C             lda [loc],y
  181  00:82C7  8D 01 00          sta thread0_loc+1
  182                             thread_on 0
       00:82CA  AD 20 00          lda thread_mask
       00:82CD  09 01             ora #(1 << 0)
       00:82CF  8D 20 00          sta thread_mask
  183                             next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:82D2  A9 01             lda #1
       00:82D4  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:82D7  18                clc
                0001              .if 2 = ARG_IMMED
       00:82D8  AD 1C 00          lda loc
       00:82DB  69 03             adc #low(#(.num_args+1))
       00:82DD  8D 1C 00          sta loc
       00:82E0  AD 1D 00          lda loc+1
       00:82E3  69 00             adc #high(#(.num_args+1))
       00:82E5  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:82E8  60                rts
  184                     
  185                     ;;;;;;;;;;;;;
  186                     ;;; sthr3 ;;;
  187                     ;;;;;;;;;;;;;
  188                     
  189                             mf_handler sthr3, 2
       00:82E9            mf_sthr3_handler:
                0002      .num_args .equ 2
  190                             mov #0, thread3_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:82E9  A9 00             lda #0
       00:82EB  8D 13 00          sta thread3_counter
                                  .endif
  191  00:82EE  A0 01             ldy #1
  192  00:82F0  B1 1C             lda [loc],y
  193  00:82F2  8D 06 00          sta thread3_loc
  194  00:82F5  C8                iny
  195  00:82F6  B1 1C             lda [loc],y
  196  00:82F8  8D 07 00          sta thread3_loc+1
  197                             thread_on 3
       00:82FB  AD 20 00          lda thread_mask
       00:82FE  09 08             ora #(1 << 3)
       00:8300  8D 20 00          sta thread_mask
  198                             next
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8303  A9 01             lda #1
       00:8305  8D 1F 00          sta continue
                                  .endif
                                  add16 loc, #(.num_args+1)
       00:8308  18                clc
                0001              .if 2 = ARG_IMMED
       00:8309  AD 1C 00          lda loc
       00:830C  69 03             adc #low(#(.num_args+1))
       00:830E  8D 1C 00          sta loc
       00:8311  AD 1D 00          lda loc+1
       00:8314  69 00             adc #high(#(.num_args+1))
       00:8316  8D 1D 00          sta loc+1
                                  .else
                                  .endif
       00:8319  60                rts
#[2]   header.nas
#[1]   demo.nas
#[2]   thread.nas
    2                             .include "thread.nas"
    1           0000              .zp     
    2                     
    3  --:0000            thread0_loc     .ds 2
    4  --:0002            thread1_loc     .ds 2
    5  --:0004            thread2_loc     .ds 2
    6  --:0006            thread3_loc     .ds 2
    7  --:0008            thread4_loc     .ds 2
    8  --:000A            thread5_loc     .ds 2
    9  --:000C            thread6_loc     .ds 2
   10  --:000E            thread7_loc     .ds 2
   11                     
   12  --:0010            thread0_counter .ds 1
   13  --:0011            thread1_counter .ds 1
   14  --:0012            thread2_counter .ds 1
   15  --:0013            thread3_counter .ds 1
   16  --:0014            thread4_counter .ds 1
   17  --:0015            thread5_counter .ds 1
   18  --:0016            thread6_counter .ds 1
   19  --:0017            thread7_counter .ds 1
   20                     
   21  --:0018            soundreg        .ds 2
   22  --:001A            jmpdest         .ds 2
   23  --:001C            loc             .ds 2
   24  --:001E            counter         .ds 1
   25  --:001F            continue        .ds 1
   26  --:0020            thread_mask     .ds 1
   27                     
   28  --:0021            arg1            .ds 1
   29  --:0022            arg2            .ds 1
   30  --:0023            arg3            .ds 1
   31                     
   32           831A              .code
   33                     
   34  00:831A            do_thread_handler:
   35  00:831A  A0 00             ldy #0
   36  00:831C  8C 1F 00          sty continue
   37  00:831F  B1 1C             lda [loc],y
   38  00:8321  A8                tay
   39  00:8322  29 03             and #3
   40  00:8324  C9 03             cmp #3
   41  00:8326  D0 12             bne do_thread_code
   42                     ;;; special op 
   43                     ;;; xxxxxx11
   44  00:8328  98                tya
   45  00:8329  4A                lsr a
   46  00:832A  AA                tax
   47                             mov16sx mft-1, jmpdest
       00:832B  BD FF 7F          lda mft-1,x
       00:832E  8D 1A 00          sta jmpdest
       00:8331  BD 00 80          lda mft-1+1,x
       00:8334  8D 1B 00          sta jmpdest+1
   48  00:8337  6C 1A 00          jmp [jmpdest]
   49                     ;;; ordinary 6502 code
   50                     ;;; xxxxxx00, xxxxxx01, xxxxxx10
   51  00:833A            do_thread_code:
   52  00:833A  6C 1C 00          jmp [loc]
   53                     
   54  00:833D            yield_handler:
   55  00:833D  18                clc
   56  00:833E  68                pla
   57  00:833F  69 01             adc #1 
   58  00:8341  8D 1C 00          sta loc
   59  00:8344  68                pla
   60  00:8345  69 00             adc #0
   61  00:8347  8D 1D 00          sta loc+1
   62  00:834A  60                rts
   63                     
#[1]   demo.nas
#[2]   main.nas
    3                             .include "main.nas"
    1           0024              .zp
    2                     
    3  --:0024            bgptr   .ds 2
    4  --:0026            tmp     .ds 1
    5                     
    6  --:0027            joy1a           .ds 1
    7  --:0028            joy1b           .ds 1
    8  --:0029            joy1select      .ds 1
    9  --:002A            joy1start       .ds 1
   10  --:002B            joy1up          .ds 1
   11  --:002C            joy1down        .ds 1
   12  --:002D            joy1left        .ds 1
   13  --:002E            joy1right       .ds 1
   14                     
   15           834B              .code
   16                     
   17  00:834B            start:  
   18                             threads_init
                                  mov #0, thread_mask
                0000              .if 2 = ARG_REG
                                  .else
       00:834B  A9 00             lda #0
       00:834D  8D 20 00          sta thread_mask
                                  .endif
                                  mov #0, thread0_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:8350  A9 00             lda #0
       00:8352  8D 10 00          sta thread0_counter
                                  .endif
                                  mov #0, thread1_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:8355  A9 00             lda #0
       00:8357  8D 11 00          sta thread1_counter
                                  .endif
                                  mov #0, thread2_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:835A  A9 00             lda #0
       00:835C  8D 12 00          sta thread2_counter
                                  .endif
                                  mov #0, thread3_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:835F  A9 00             lda #0
       00:8361  8D 13 00          sta thread3_counter
                                  .endif
                                  mov #0, thread4_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:8364  A9 00             lda #0
       00:8366  8D 14 00          sta thread4_counter
                                  .endif
                                  mov #0, thread5_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:8369  A9 00             lda #0
       00:836B  8D 15 00          sta thread5_counter
                                  .endif
                                  mov #0, thread6_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:836E  A9 00             lda #0
       00:8370  8D 16 00          sta thread6_counter
                                  .endif
                                  mov #0, thread7_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:8373  A9 00             lda #0
       00:8375  8D 17 00          sta thread7_counter
                                  .endif
   19                     
   20                             start_thread 0, your_turn_to_win_0_c
                                  mov #0, thread0_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:8378  A9 00             lda #0
       00:837A  8D 10 00          sta thread0_counter
                                  .endif
                                  mov16 #your_turn_to_win_0_c, thread0_loc
                0001              .if 2 = ARG_IMMED
                                  mov #low(#your_turn_to_win_0_c), thread0_loc
                0000              .if 2 = ARG_REG
                                  .else
       00:837D  A9 D5             lda #low(#your_turn_to_win_0_c)
       00:837F  8D 00 00          sta thread0_loc
                                  .endif
                                  mov #high(#your_turn_to_win_0_c), thread0_loc+1
                0000              .if 2 = ARG_REG
                                  .else
       00:8382  A9 86             lda #high(#your_turn_to_win_0_c)
       00:8384  8D 01 00          sta thread0_loc+1
                                  .endif
                                  .else
                                  .endif
                                  thread_on 0
       00:8387  AD 20 00          lda thread_mask
       00:838A  09 01             ora #(1 << 0)
       00:838C  8D 20 00          sta thread_mask
   21                             start_thread 1, your_turn_to_win_1
                                  mov #0, thread1_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:838F  A9 00             lda #0
       00:8391  8D 11 00          sta thread1_counter
                                  .endif
                                  mov16 #your_turn_to_win_1, thread1_loc
                0001              .if 2 = ARG_IMMED
                                  mov #low(#your_turn_to_win_1), thread1_loc
                0000              .if 2 = ARG_REG
                                  .else
       00:8394  A9 81             lda #low(#your_turn_to_win_1)
       00:8396  8D 02 00          sta thread1_loc
                                  .endif
                                  mov #high(#your_turn_to_win_1), thread1_loc+1
                0000              .if 2 = ARG_REG
                                  .else
       00:8399  A9 87             lda #high(#your_turn_to_win_1)
       00:839B  8D 03 00          sta thread1_loc+1
                                  .endif
                                  .else
                                  .endif
                                  thread_on 1
       00:839E  AD 20 00          lda thread_mask
       00:83A1  09 02             ora #(1 << 1)
       00:83A3  8D 20 00          sta thread_mask
   22                             start_thread 3, your_turn_to_win_3a
                                  mov #0, thread3_counter
                0000              .if 2 = ARG_REG
                                  .else
       00:83A6  A9 00             lda #0
       00:83A8  8D 13 00          sta thread3_counter
                                  .endif
                                  mov16 #your_turn_to_win_3a, thread3_loc
                0001              .if 2 = ARG_IMMED
                                  mov #low(#your_turn_to_win_3a), thread3_loc
                0000              .if 2 = ARG_REG
                                  .else
       00:83AB  A9 35             lda #low(#your_turn_to_win_3a)
       00:83AD  8D 06 00          sta thread3_loc
                                  .endif
                                  mov #high(#your_turn_to_win_3a), thread3_loc+1
                0000              .if 2 = ARG_REG
                                  .else
       00:83B0  A9 86             lda #high(#your_turn_to_win_3a)
       00:83B2  8D 07 00          sta thread3_loc+1
                                  .endif
                                  .else
                                  .endif
                                  thread_on 3
       00:83B5  AD 20 00          lda thread_mask
       00:83B8  09 08             ora #(1 << 3)
       00:83BA  8D 20 00          sta thread_mask
   23                     
   24                     
   25                     
   26                             mov16 #dance, thread4_loc
                0001              .if 2 = ARG_IMMED
                                  mov #low(#dance), thread4_loc
                0000              .if 2 = ARG_REG
                                  .else
       00:83BD  A9 B5             lda #low(#dance)
       00:83BF  8D 08 00          sta thread4_loc
                                  .endif
                                  mov #high(#dance), thread4_loc+1
                0000              .if 2 = ARG_REG
                                  .else
       00:83C2  A9 88             lda #high(#dance)
       00:83C4  8D 09 00          sta thread4_loc+1
                                  .endif
                                  .else
                                  .endif
   27                     
   28                     
   29                             mov #$0F, $4015
                0000              .if 2 = ARG_REG
                                  .else
       00:83C7  A9 0F             lda #$0F
       00:83C9  8D 15 40          sta $4015
                                  .endif
   30                     
   31  00:83CC  20 16 89          jsr vwait
   32  00:83CF  20 16 89          jsr vwait
   33                             mov #0, $2000
                0000              .if 2 = ARG_REG
                                  .else
       00:83D2  A9 00             lda #0
       00:83D4  8D 00 20          sta $2000
                                  .endif
   34                             mov #0, $2001
                0000              .if 2 = ARG_REG
                                  .else
       00:83D7  A9 00             lda #0
       00:83D9  8D 01 20          sta $2001
                                  .endif
   35  00:83DC            palette:
   36                             ppua #bgpal
                0001              .if 2 = ARG_IMMED
                                  mov #high(#bgpal), $2006
                0000              .if 2 = ARG_REG
                                  .else
       00:83DC  A9 3F             lda #high(#bgpal)
       00:83DE  8D 06 20          sta $2006
                                  .endif
                                  mov #low(#bgpal), $2006
                0000              .if 2 = ARG_REG
                                  .else
       00:83E1  A9 00             lda #low(#bgpal)
       00:83E3  8D 06 20          sta $2006
                                  .endif
                                  .else
                                  .endif
   37                             ppuw #$30
                                  mov #$30, $2007
                0000              .if 2 = ARG_REG
                                  .else
       00:83E6  A9 30             lda #$30
       00:83E8  8D 07 20          sta $2007
                                  .endif
   38                             ppuw #$20
                                  mov #$20, $2007
                0000              .if 2 = ARG_REG
                                  .else
       00:83EB  A9 20             lda #$20
       00:83ED  8D 07 20          sta $2007
                                  .endif
   39                             ppuw #$10
                                  mov #$10, $2007
                0000              .if 2 = ARG_REG
                                  .else
       00:83F0  A9 10             lda #$10
       00:83F2  8D 07 20          sta $2007
                                  .endif
   40                             ppuw #$0e
                                  mov #$0e, $2007
                0000              .if 2 = ARG_REG
                                  .else
       00:83F5  A9 0E             lda #$0e
       00:83F7  8D 07 20          sta $2007
                                  .endif
   41                     
   42  00:83FA            init_background:
   43                             mov16 #bgnam, bgptr
                0001              .if 2 = ARG_IMMED
                                  mov #low(#bgnam), bgptr
                0000              .if 2 = ARG_REG
                                  .else
       00:83FA  A9 20             lda #low(#bgnam)
       00:83FC  8D 24 00          sta bgptr
                                  .endif
                                  mov #high(#bgnam), bgptr+1
                0000              .if 2 = ARG_REG
                                  .else
       00:83FF  A9 20             lda #high(#bgnam)
       00:8401  8D 25 00          sta bgptr+1
                                  .endif
                                  .else
                                  .endif
   44                             add16 bgptr, #(2 + 3 * $20)
       00:8404  18                clc
                0001              .if 2 = ARG_IMMED
       00:8405  AD 24 00          lda bgptr
       00:8408  69 62             adc #low(#(2 + 3 * $20))
       00:840A  8D 24 00          sta bgptr
       00:840D  AD 25 00          lda bgptr+1
       00:8410  69 00             adc #high(#(2 + 3 * $20))
       00:8412  8D 25 00          sta bgptr+1
                                  .else
                                  .endif
   45  00:8415  20 30 89          jsr draw_guy
   46                             mov16 #bgnam, bgptr
                0001              .if 2 = ARG_IMMED
                                  mov #low(#bgnam), bgptr
                0000              .if 2 = ARG_REG
                                  .else
       00:8418  A9 20             lda #low(#bgnam)
       00:841A  8D 24 00          sta bgptr
                                  .endif
                                  mov #high(#bgnam), bgptr+1
                0000              .if 2 = ARG_REG
                                  .else
       00:841D  A9 20             lda #high(#bgnam)
       00:841F  8D 25 00          sta bgptr+1
                                  .endif
                                  .else
                                  .endif
   47                             add16 bgptr, #(10 + 9 * $20)
       00:8422  18                clc
                0001              .if 2 = ARG_IMMED
       00:8423  AD 24 00          lda bgptr
       00:8426  69 2A             adc #low(#(10 + 9 * $20))
       00:8428  8D 24 00          sta bgptr
       00:842B  AD 25 00          lda bgptr+1
       00:842E  69 01             adc #high(#(10 + 9 * $20))
       00:8430  8D 25 00          sta bgptr+1
                                  .else
                                  .endif
   48  00:8433  20 30 89          jsr draw_guy
   49                             mov16 #bgnam, bgptr
                0001              .if 2 = ARG_IMMED
                                  mov #low(#bgnam), bgptr
                0000              .if 2 = ARG_REG
                                  .else
       00:8436  A9 20             lda #low(#bgnam)
       00:8438  8D 24 00          sta bgptr
                                  .endif
                                  mov #high(#bgnam), bgptr+1
                0000              .if 2 = ARG_REG
                                  .else
       00:843B  A9 20             lda #high(#bgnam)
       00:843D  8D 25 00          sta bgptr+1
                                  .endif
                                  .else
                                  .endif
   50                             add16 bgptr, #(18 + 5 * $20)
       00:8440  18                clc
                0001              .if 2 = ARG_IMMED
       00:8441  AD 24 00          lda bgptr
       00:8444  69 B2             adc #low(#(18 + 5 * $20))
       00:8446  8D 24 00          sta bgptr
       00:8449  AD 25 00          lda bgptr+1
       00:844C  69 00             adc #high(#(18 + 5 * $20))
       00:844E  8D 25 00          sta bgptr+1
                                  .else
                                  .endif
   51  00:8451  20 30 89          jsr draw_guy
   52                     
   53                     
   54  00:8454  20 16 89          jsr vwait
   55  00:8457  20 16 89          jsr vwait
   56                             mov #%10010000, $2000
                0000              .if 2 = ARG_REG
                                  .else
       00:845A  A9 90             lda #%10010000
       00:845C  8D 00 20          sta $2000
                                  .endif
   57                             mov #%00001000, $2001
                0000              .if 2 = ARG_REG
                                  .else
       00:845F  A9 08             lda #%00001000
       00:8461  8D 01 20          sta $2001
                                  .endif
   58                     
   59  00:8464            main_loop:
   60  00:8464  20 79 89          jsr joystick1
   61  00:8467  AD 27 00          lda joy1a
   62  00:846A  F0 03             beq .no
   63                     ;       thread_on 4
   64  00:846C  4C 6F 84          jmp .anyway
   65  00:846F            .no:
   66                     ;       thread_off 4
   67  00:846F            .anyway:
   68                             do_threads
                                  do_thread 0
       00:846F  AD 20 00          lda thread_mask
       00:8472  29 01             and #(1 << 0)
       00:8474  F0 36             beq .quit00193
                                  mov16 thread0_loc, loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov thread0_loc, loc
                0000              .if 6 = ARG_REG
                                  .else
       00:8476  AD 00 00          lda thread0_loc
       00:8479  8D 1C 00          sta loc
                                  .endif
                                  mov thread0_loc+1, loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:847C  AD 01 00          lda thread0_loc+1
       00:847F  8D 1D 00          sta loc+1
                                  .endif
                                  .endif
                                  mov thread0_counter, counter
                0000              .if 6 = ARG_REG
                                  .else
       00:8482  AD 10 00          lda thread0_counter
       00:8485  8D 1E 00          sta counter
                                  .endif
                0001              .if (0 < 4)
                                  mov16 #($4000 + (0 * 4)), soundreg
                0001              .if 2 = ARG_IMMED
                                  mov #low(#($4000 + (0 * 4))), soundreg
                0000              .if 2 = ARG_REG
                                  .else
       00:8488  A9 00             lda #low(#($4000 + (0 * 4)))
       00:848A  8D 18 00          sta soundreg
                                  .endif
                                  mov #high(#($4000 + (0 * 4))), soundreg+1
                0000              .if 2 = ARG_REG
                                  .else
       00:848D  A9 40             lda #high(#($4000 + (0 * 4)))
       00:848F  8D 19 00          sta soundreg+1
                                  .endif
                                  .else
                                  .endif
                                  .endif
       00:8492            .continue00193:
       00:8492  20 1A 83          jsr do_thread_handler
       00:8495  AD 1F 00          lda continue
       00:8498  D0 F8             bne .continue00193
                                  mov16 loc, thread0_loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov loc, thread0_loc
                0000              .if 6 = ARG_REG
                                  .else
       00:849A  AD 1C 00          lda loc
       00:849D  8D 00 00          sta thread0_loc
                                  .endif
                                  mov loc+1, thread0_loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:84A0  AD 1D 00          lda loc+1
       00:84A3  8D 01 00          sta thread0_loc+1
                                  .endif
                                  .endif
                                  mov counter, thread0_counter
                0000              .if 6 = ARG_REG
                                  .else
       00:84A6  AD 1E 00          lda counter
       00:84A9  8D 10 00          sta thread0_counter
                                  .endif
       00:84AC            .quit00193:
                                  do_thread 1
       00:84AC  AD 20 00          lda thread_mask
       00:84AF  29 02             and #(1 << 1)
       00:84B1  F0 36             beq .quit00205
                                  mov16 thread1_loc, loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov thread1_loc, loc
                0000              .if 6 = ARG_REG
                                  .else
       00:84B3  AD 02 00          lda thread1_loc
       00:84B6  8D 1C 00          sta loc
                                  .endif
                                  mov thread1_loc+1, loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:84B9  AD 03 00          lda thread1_loc+1
       00:84BC  8D 1D 00          sta loc+1
                                  .endif
                                  .endif
                                  mov thread1_counter, counter
                0000              .if 6 = ARG_REG
                                  .else
       00:84BF  AD 11 00          lda thread1_counter
       00:84C2  8D 1E 00          sta counter
                                  .endif
                0001              .if (1 < 4)
                                  mov16 #($4000 + (1 * 4)), soundreg
                0001              .if 2 = ARG_IMMED
                                  mov #low(#($4000 + (1 * 4))), soundreg
                0000              .if 2 = ARG_REG
                                  .else
       00:84C5  A9 04             lda #low(#($4000 + (1 * 4)))
       00:84C7  8D 18 00          sta soundreg
                                  .endif
                                  mov #high(#($4000 + (1 * 4))), soundreg+1
                0000              .if 2 = ARG_REG
                                  .else
       00:84CA  A9 40             lda #high(#($4000 + (1 * 4)))
       00:84CC  8D 19 00          sta soundreg+1
                                  .endif
                                  .else
                                  .endif
                                  .endif
       00:84CF            .continue00205:
       00:84CF  20 1A 83          jsr do_thread_handler
       00:84D2  AD 1F 00          lda continue
       00:84D5  D0 F8             bne .continue00205
                                  mov16 loc, thread1_loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov loc, thread1_loc
                0000              .if 6 = ARG_REG
                                  .else
       00:84D7  AD 1C 00          lda loc
       00:84DA  8D 02 00          sta thread1_loc
                                  .endif
                                  mov loc+1, thread1_loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:84DD  AD 1D 00          lda loc+1
       00:84E0  8D 03 00          sta thread1_loc+1
                                  .endif
                                  .endif
                                  mov counter, thread1_counter
                0000              .if 6 = ARG_REG
                                  .else
       00:84E3  AD 1E 00          lda counter
       00:84E6  8D 11 00          sta thread1_counter
                                  .endif
       00:84E9            .quit00205:
                                  do_thread 2
       00:84E9  AD 20 00          lda thread_mask
       00:84EC  29 04             and #(1 << 2)
       00:84EE  F0 36             beq .quit00217
                                  mov16 thread2_loc, loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov thread2_loc, loc
                0000              .if 6 = ARG_REG
                                  .else
       00:84F0  AD 04 00          lda thread2_loc
       00:84F3  8D 1C 00          sta loc
                                  .endif
                                  mov thread2_loc+1, loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:84F6  AD 05 00          lda thread2_loc+1
       00:84F9  8D 1D 00          sta loc+1
                                  .endif
                                  .endif
                                  mov thread2_counter, counter
                0000              .if 6 = ARG_REG
                                  .else
       00:84FC  AD 12 00          lda thread2_counter
       00:84FF  8D 1E 00          sta counter
                                  .endif
                0001              .if (2 < 4)
                                  mov16 #($4000 + (2 * 4)), soundreg
                0001              .if 2 = ARG_IMMED
                                  mov #low(#($4000 + (2 * 4))), soundreg
                0000              .if 2 = ARG_REG
                                  .else
       00:8502  A9 08             lda #low(#($4000 + (2 * 4)))
       00:8504  8D 18 00          sta soundreg
                                  .endif
                                  mov #high(#($4000 + (2 * 4))), soundreg+1
                0000              .if 2 = ARG_REG
                                  .else
       00:8507  A9 40             lda #high(#($4000 + (2 * 4)))
       00:8509  8D 19 00          sta soundreg+1
                                  .endif
                                  .else
                                  .endif
                                  .endif
       00:850C            .continue00217:
       00:850C  20 1A 83          jsr do_thread_handler
       00:850F  AD 1F 00          lda continue
       00:8512  D0 F8             bne .continue00217
                                  mov16 loc, thread2_loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov loc, thread2_loc
                0000              .if 6 = ARG_REG
                                  .else
       00:8514  AD 1C 00          lda loc
       00:8517  8D 04 00          sta thread2_loc
                                  .endif
                                  mov loc+1, thread2_loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:851A  AD 1D 00          lda loc+1
       00:851D  8D 05 00          sta thread2_loc+1
                                  .endif
                                  .endif
                                  mov counter, thread2_counter
                0000              .if 6 = ARG_REG
                                  .else
       00:8520  AD 1E 00          lda counter
       00:8523  8D 12 00          sta thread2_counter
                                  .endif
       00:8526            .quit00217:
                                  do_thread 3
       00:8526  AD 20 00          lda thread_mask
       00:8529  29 08             and #(1 << 3)
       00:852B  F0 36             beq .quit00229
                                  mov16 thread3_loc, loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov thread3_loc, loc
                0000              .if 6 = ARG_REG
                                  .else
       00:852D  AD 06 00          lda thread3_loc
       00:8530  8D 1C 00          sta loc
                                  .endif
                                  mov thread3_loc+1, loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:8533  AD 07 00          lda thread3_loc+1
       00:8536  8D 1D 00          sta loc+1
                                  .endif
                                  .endif
                                  mov thread3_counter, counter
                0000              .if 6 = ARG_REG
                                  .else
       00:8539  AD 13 00          lda thread3_counter
       00:853C  8D 1E 00          sta counter
                                  .endif
                0001              .if (3 < 4)
                                  mov16 #($4000 + (3 * 4)), soundreg
                0001              .if 2 = ARG_IMMED
                                  mov #low(#($4000 + (3 * 4))), soundreg
                0000              .if 2 = ARG_REG
                                  .else
       00:853F  A9 0C             lda #low(#($4000 + (3 * 4)))
       00:8541  8D 18 00          sta soundreg
                                  .endif
                                  mov #high(#($4000 + (3 * 4))), soundreg+1
                0000              .if 2 = ARG_REG
                                  .else
       00:8544  A9 40             lda #high(#($4000 + (3 * 4)))
       00:8546  8D 19 00          sta soundreg+1
                                  .endif
                                  .else
                                  .endif
                                  .endif
       00:8549            .continue00229:
       00:8549  20 1A 83          jsr do_thread_handler
       00:854C  AD 1F 00          lda continue
       00:854F  D0 F8             bne .continue00229
                                  mov16 loc, thread3_loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov loc, thread3_loc
                0000              .if 6 = ARG_REG
                                  .else
       00:8551  AD 1C 00          lda loc
       00:8554  8D 06 00          sta thread3_loc
                                  .endif
                                  mov loc+1, thread3_loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:8557  AD 1D 00          lda loc+1
       00:855A  8D 07 00          sta thread3_loc+1
                                  .endif
                                  .endif
                                  mov counter, thread3_counter
                0000              .if 6 = ARG_REG
                                  .else
       00:855D  AD 1E 00          lda counter
       00:8560  8D 13 00          sta thread3_counter
                                  .endif
       00:8563            .quit00229:
                                  do_thread 4
       00:8563  AD 20 00          lda thread_mask
       00:8566  29 10             and #(1 << 4)
       00:8568  F0 2C             beq .quit00241
                                  mov16 thread4_loc, loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov thread4_loc, loc
                0000              .if 6 = ARG_REG
                                  .else
       00:856A  AD 08 00          lda thread4_loc
       00:856D  8D 1C 00          sta loc
                                  .endif
                                  mov thread4_loc+1, loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:8570  AD 09 00          lda thread4_loc+1
       00:8573  8D 1D 00          sta loc+1
                                  .endif
                                  .endif
                                  mov thread4_counter, counter
                0000              .if 6 = ARG_REG
                                  .else
       00:8576  AD 14 00          lda thread4_counter
       00:8579  8D 1E 00          sta counter
                                  .endif
                0000              .if (4 < 4)
                                  .endif
       00:857C            .continue00241:
       00:857C  20 1A 83          jsr do_thread_handler
       00:857F  AD 1F 00          lda continue
       00:8582  D0 F8             bne .continue00241
                                  mov16 loc, thread4_loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov loc, thread4_loc
                0000              .if 6 = ARG_REG
                                  .else
       00:8584  AD 1C 00          lda loc
       00:8587  8D 08 00          sta thread4_loc
                                  .endif
                                  mov loc+1, thread4_loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:858A  AD 1D 00          lda loc+1
       00:858D  8D 09 00          sta thread4_loc+1
                                  .endif
                                  .endif
                                  mov counter, thread4_counter
                0000              .if 6 = ARG_REG
                                  .else
       00:8590  AD 1E 00          lda counter
       00:8593  8D 14 00          sta thread4_counter
                                  .endif
       00:8596            .quit00241:
                                  do_thread 5
       00:8596  AD 20 00          lda thread_mask
       00:8599  29 20             and #(1 << 5)
       00:859B  F0 2C             beq .quit00250
                                  mov16 thread5_loc, loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov thread5_loc, loc
                0000              .if 6 = ARG_REG
                                  .else
       00:859D  AD 0A 00          lda thread5_loc
       00:85A0  8D 1C 00          sta loc
                                  .endif
                                  mov thread5_loc+1, loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:85A3  AD 0B 00          lda thread5_loc+1
       00:85A6  8D 1D 00          sta loc+1
                                  .endif
                                  .endif
                                  mov thread5_counter, counter
                0000              .if 6 = ARG_REG
                                  .else
       00:85A9  AD 15 00          lda thread5_counter
       00:85AC  8D 1E 00          sta counter
                                  .endif
                0000              .if (5 < 4)
                                  .endif
       00:85AF            .continue00250:
       00:85AF  20 1A 83          jsr do_thread_handler
       00:85B2  AD 1F 00          lda continue
       00:85B5  D0 F8             bne .continue00250
                                  mov16 loc, thread5_loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov loc, thread5_loc
                0000              .if 6 = ARG_REG
                                  .else
       00:85B7  AD 1C 00          lda loc
       00:85BA  8D 0A 00          sta thread5_loc
                                  .endif
                                  mov loc+1, thread5_loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:85BD  AD 1D 00          lda loc+1
       00:85C0  8D 0B 00          sta thread5_loc+1
                                  .endif
                                  .endif
                                  mov counter, thread5_counter
                0000              .if 6 = ARG_REG
                                  .else
       00:85C3  AD 1E 00          lda counter
       00:85C6  8D 15 00          sta thread5_counter
                                  .endif
       00:85C9            .quit00250:
                                  do_thread 6
       00:85C9  AD 20 00          lda thread_mask
       00:85CC  29 40             and #(1 << 6)
       00:85CE  F0 2C             beq .quit00259
                                  mov16 thread6_loc, loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov thread6_loc, loc
                0000              .if 6 = ARG_REG
                                  .else
       00:85D0  AD 0C 00          lda thread6_loc
       00:85D3  8D 1C 00          sta loc
                                  .endif
                                  mov thread6_loc+1, loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:85D6  AD 0D 00          lda thread6_loc+1
       00:85D9  8D 1D 00          sta loc+1
                                  .endif
                                  .endif
                                  mov thread6_counter, counter
                0000              .if 6 = ARG_REG
                                  .else
       00:85DC  AD 16 00          lda thread6_counter
       00:85DF  8D 1E 00          sta counter
                                  .endif
                0000              .if (6 < 4)
                                  .endif
       00:85E2            .continue00259:
       00:85E2  20 1A 83          jsr do_thread_handler
       00:85E5  AD 1F 00          lda continue
       00:85E8  D0 F8             bne .continue00259
                                  mov16 loc, thread6_loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov loc, thread6_loc
                0000              .if 6 = ARG_REG
                                  .else
       00:85EA  AD 1C 00          lda loc
       00:85ED  8D 0C 00          sta thread6_loc
                                  .endif
                                  mov loc+1, thread6_loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:85F0  AD 1D 00          lda loc+1
       00:85F3  8D 0D 00          sta thread6_loc+1
                                  .endif
                                  .endif
                                  mov counter, thread6_counter
                0000              .if 6 = ARG_REG
                                  .else
       00:85F6  AD 1E 00          lda counter
       00:85F9  8D 16 00          sta thread6_counter
                                  .endif
       00:85FC            .quit00259:
                                  do_thread 7
       00:85FC  AD 20 00          lda thread_mask
       00:85FF  29 80             and #(1 << 7)
       00:8601  F0 2C             beq .quit00268
                                  mov16 thread7_loc, loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov thread7_loc, loc
                0000              .if 6 = ARG_REG
                                  .else
       00:8603  AD 0E 00          lda thread7_loc
       00:8606  8D 1C 00          sta loc
                                  .endif
                                  mov thread7_loc+1, loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:8609  AD 0F 00          lda thread7_loc+1
       00:860C  8D 1D 00          sta loc+1
                                  .endif
                                  .endif
                                  mov thread7_counter, counter
                0000              .if 6 = ARG_REG
                                  .else
       00:860F  AD 17 00          lda thread7_counter
       00:8612  8D 1E 00          sta counter
                                  .endif
                0000              .if (7 < 4)
                                  .endif
       00:8615            .continue00268:
       00:8615  20 1A 83          jsr do_thread_handler
       00:8618  AD 1F 00          lda continue
       00:861B  D0 F8             bne .continue00268
                                  mov16 loc, thread7_loc
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov loc, thread7_loc
                0000              .if 6 = ARG_REG
                                  .else
       00:861D  AD 1C 00          lda loc
       00:8620  8D 0E 00          sta thread7_loc
                                  .endif
                                  mov loc+1, thread7_loc+1
                0000              .if 3 = ARG_REG
                                  .else
       00:8623  AD 1D 00          lda loc+1
       00:8626  8D 0F 00          sta thread7_loc+1
                                  .endif
                                  .endif
                                  mov counter, thread7_counter
                0000              .if 6 = ARG_REG
                                  .else
       00:8629  AD 1E 00          lda counter
       00:862C  8D 17 00          sta thread7_counter
                                  .endif
       00:862F            .quit00268:
   69  00:862F  20 16 89          jsr vwait
   70  00:8632  4C 64 84          jmp     main_loop
   71                     
   72                     
   73                             ; import All the Songs
   74                             all_songs
       00:8635            your_turn_to_win_3a:
                                  pat_your_turn_to_win_3a
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8635  A9 01             lda #1
       00:8637  8D 1F 00          sta continue
                                  .endif
       00:863A  20 3D 83          jsr yield_handler
                                  thread_on 4
       00:863D  AD 20 00          lda thread_mask
       00:8640  09 10             ora #(1 << 4)
       00:8642  8D 20 00          sta thread_mask
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8645  A9 01             lda #1
       00:8647  8D 1F 00          sta continue
                                  .endif
       00:864A  20 3D 83          jsr yield_handler
                                  mf rest, 9
       00:864D  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:864E  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf specialx, 9
       00:864F  0F                .db (mf_specialx_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8650  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf rest, 9
       00:8651  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8652  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  thread_on 4
       00:8653  AD 20 00          lda thread_mask
       00:8656  09 10             ora #(1 << 4)
       00:8658  8D 20 00          sta thread_mask
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:865B  A9 01             lda #1
       00:865D  8D 1F 00          sta continue
                                  .endif
       00:8660  20 3D 83          jsr yield_handler
                                  mf specialy, 9
       00:8663  13                .db (mf_specialy_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8664  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf specialx, 9
       00:8665  0F                .db (mf_specialx_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8666  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf rest, 9
       00:8667  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8668  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  thread_on 4
       00:8669  AD 20 00          lda thread_mask
       00:866C  09 10             ora #(1 << 4)
       00:866E  8D 20 00          sta thread_mask
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8671  A9 01             lda #1
       00:8673  8D 1F 00          sta continue
                                  .endif
       00:8676  20 3D 83          jsr yield_handler
                                  mf specialy, 9
       00:8679  13                .db (mf_specialy_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:867A  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf specialx, 9
       00:867B  0F                .db (mf_specialx_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:867C  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
       00:867D  4C 35 86          jmp your_turn_to_win_3a
       00:8680            your_turn_to_win_3b:
                                  pat_your_turn_to_win_3b
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8680  A9 01             lda #1
       00:8682  8D 1F 00          sta continue
                                  .endif
       00:8685  20 3D 83          jsr yield_handler
                                  thread_on 4
       00:8688  AD 20 00          lda thread_mask
       00:868B  09 10             ora #(1 << 4)
       00:868D  8D 20 00          sta thread_mask
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8690  A9 01             lda #1
       00:8692  8D 1F 00          sta continue
                                  .endif
       00:8695  20 3D 83          jsr yield_handler
                                  mf specialx, 9
       00:8698  0F                .db (mf_specialx_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8699  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  thread_on 4
       00:869A  AD 20 00          lda thread_mask
       00:869D  09 10             ora #(1 << 4)
       00:869F  8D 20 00          sta thread_mask
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:86A2  A9 01             lda #1
       00:86A4  8D 1F 00          sta continue
                                  .endif
       00:86A7  20 3D 83          jsr yield_handler
                                  mf specialx, 9
       00:86AA  0F                .db (mf_specialx_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:86AB  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  thread_on 4
       00:86AC  AD 20 00          lda thread_mask
       00:86AF  09 10             ora #(1 << 4)
       00:86B1  8D 20 00          sta thread_mask
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:86B4  A9 01             lda #1
       00:86B6  8D 1F 00          sta continue
                                  .endif
       00:86B9  20 3D 83          jsr yield_handler
                                  mf specialx, 9
       00:86BC  0F                .db (mf_specialx_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:86BD  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  thread_on 4
       00:86BE  AD 20 00          lda thread_mask
       00:86C1  09 10             ora #(1 << 4)
       00:86C3  8D 20 00          sta thread_mask
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:86C6  A9 01             lda #1
       00:86C8  8D 1F 00          sta continue
                                  .endif
       00:86CB  20 3D 83          jsr yield_handler
                                  mf specialx, 9
       00:86CE  0F                .db (mf_specialx_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:86CF  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf rest, 36
       00:86D0  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:86D1  24                .db 36
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
       00:86D2  4C 80 86          jmp your_turn_to_win_3b
       00:86D5            your_turn_to_win_0_c:
                                  pat_your_turn_to_win_0_c
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:86D5  A9 01             lda #1
       00:86D7  8D 1F 00          sta continue
                                  .endif
       00:86DA  20 3D 83          jsr yield_handler
                                  mf note, 18, 171, 1
       00:86DD  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:86DE  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:86DF  AB                .db 171
                                  .endif
                0001              .if (4 >= 4)
       00:86E0  01                .db 1
                                  .endif
       00:86E1  4C D5 86          jmp your_turn_to_win_0_c
       00:86E4            your_turn_to_win_0_cmaj7:
                                  pat_your_turn_to_win_0_cmaj7
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:86E4  A9 01             lda #1
       00:86E6  8D 1F 00          sta continue
                                  .endif
       00:86E9  20 3D 83          jsr yield_handler
                                  mf note, 18, 171, 1
       00:86EC  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:86ED  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:86EE  AB                .db 171
                                  .endif
                0001              .if (4 >= 4)
       00:86EF  01                .db 1
                                  .endif
       00:86F0  4C E4 86          jmp your_turn_to_win_0_cmaj7
       00:86F3            your_turn_to_win_0_em:
                                  pat_your_turn_to_win_0_em
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:86F3  A9 01             lda #1
       00:86F5  8D 1F 00          sta continue
                                  .endif
       00:86F8  20 3D 83          jsr yield_handler
                                  mf note, 18, 83, 1
       00:86FB  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:86FC  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:86FD  53                .db 83
                                  .endif
                0001              .if (4 >= 4)
       00:86FE  01                .db 1
                                  .endif
                                  mf note, 18, 83, 1
       00:86FF  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8700  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8701  53                .db 83
                                  .endif
                0001              .if (4 >= 4)
       00:8702  01                .db 1
                                  .endif
                                  mf note, 9, 29, 1
       00:8703  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8704  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8705  1D                .db 29
                                  .endif
                0001              .if (4 >= 4)
       00:8706  01                .db 1
                                  .endif
                                  mf note, 9, 197, 1
       00:8707  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8708  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8709  C5                .db 197
                                  .endif
                0001              .if (4 >= 4)
       00:870A  01                .db 1
                                  .endif
                                  mf note, 18, 83, 1
       00:870B  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:870C  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:870D  53                .db 83
                                  .endif
                0001              .if (4 >= 4)
       00:870E  01                .db 1
                                  .endif
       00:870F  4C F3 86          jmp your_turn_to_win_0_em
       00:8712            your_turn_to_win_0_f:
                                  pat_your_turn_to_win_0_f
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8712  A9 01             lda #1
       00:8714  8D 1F 00          sta continue
                                  .endif
       00:8717  20 3D 83          jsr yield_handler
                                  mf note, 18, 64, 1
       00:871A  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:871B  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:871C  40                .db 64
                                  .endif
                0001              .if (4 >= 4)
       00:871D  01                .db 1
                                  .endif
       00:871E  4C 12 87          jmp your_turn_to_win_0_f
       00:8721            your_turn_to_win_0_dm7:
                                  pat_your_turn_to_win_0_dm7
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8721  A9 01             lda #1
       00:8723  8D 1F 00          sta continue
                                  .endif
       00:8726  20 3D 83          jsr yield_handler
                                  mf note, 18, 124, 1
       00:8729  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:872A  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:872B  7C                .db 124
                                  .endif
                0001              .if (4 >= 4)
       00:872C  01                .db 1
                                  .endif
                                  mf note, 18, 64, 1
       00:872D  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:872E  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:872F  40                .db 64
                                  .endif
                0001              .if (4 >= 4)
       00:8730  01                .db 1
                                  .endif
                                  mf note, 18, 254, 0
       00:8731  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8732  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8733  FE                .db 254
                                  .endif
                0001              .if (4 >= 4)
       00:8734  00                .db 0
                                  .endif
                                  mf note, 18, 213, 0
       00:8735  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8736  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8737  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:8738  00                .db 0
                                  .endif
       00:8739  4C 21 87          jmp your_turn_to_win_0_dm7
       00:873C            your_turn_to_win_0_g7:
                                  pat_your_turn_to_win_0_g7
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:873C  A9 01             lda #1
       00:873E  8D 1F 00          sta continue
                                  .endif
       00:8741  20 3D 83          jsr yield_handler
                                  mf note, 18, 29, 1
       00:8744  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8745  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8746  1D                .db 29
                                  .endif
                0001              .if (4 >= 4)
       00:8747  01                .db 1
                                  .endif
                                  mf note, 18, 226, 0
       00:8748  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8749  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:874A  E2                .db 226
                                  .endif
                0001              .if (4 >= 4)
       00:874B  00                .db 0
                                  .endif
                                  mf note, 18, 190, 0
       00:874C  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:874D  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:874E  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:874F  00                .db 0
                                  .endif
                                  mf note, 18, 160, 0
       00:8750  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8751  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8752  A0                .db 160
                                  .endif
                0001              .if (4 >= 4)
       00:8753  00                .db 0
                                  .endif
       00:8754  4C 3C 87          jmp your_turn_to_win_0_g7
       00:8757            your_turn_to_win_0_g:
                                  pat_your_turn_to_win_0_g
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8757  A9 01             lda #1
       00:8759  8D 1F 00          sta continue
                                  .endif
       00:875C  20 3D 83          jsr yield_handler
                                  mf note, 9, 29, 1
       00:875F  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8760  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8761  1D                .db 29
                                  .endif
                0001              .if (4 >= 4)
       00:8762  01                .db 1
                                  .endif
       00:8763  4C 57 87          jmp your_turn_to_win_0_g
       00:8766            your_turn_to_win_0_c9:
                                  pat_your_turn_to_win_0_c9
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8766  A9 01             lda #1
       00:8768  8D 1F 00          sta continue
                                  .endif
       00:876B  20 3D 83          jsr yield_handler
                                  mf note, 18, 171, 1
       00:876E  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:876F  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8770  AB                .db 171
                                  .endif
                0001              .if (4 >= 4)
       00:8771  01                .db 1
                                  .endif
                                  mf note, 18, 83, 1
       00:8772  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8773  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8774  53                .db 83
                                  .endif
                0001              .if (4 >= 4)
       00:8775  01                .db 1
                                  .endif
                                  mf note, 18, 29, 1
       00:8776  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8777  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8778  1D                .db 29
                                  .endif
                0001              .if (4 >= 4)
       00:8779  01                .db 1
                                  .endif
                                  mf note, 18, 239, 0
       00:877A  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:877B  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:877C  EF                .db 239
                                  .endif
                0001              .if (4 >= 4)
       00:877D  00                .db 0
                                  .endif
       00:877E  4C 66 87          jmp your_turn_to_win_0_c9
       00:8781            your_turn_to_win_1:
                                  pat_your_turn_to_win_1
                                  here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:8781  A9 01             lda #1
       00:8783  8D 1F 00          sta continue
                                  .endif
       00:8786  20 3D 83          jsr yield_handler
                                  mf note, 9, 213, 0
       00:8789  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:878A  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:878B  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:878C  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:878D  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:878E  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:878F  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:8790  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:8791  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8792  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8793  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:8794  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:8795  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8796  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8797  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:8798  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:8799  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:879A  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:879B  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:879C  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:879D  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:879E  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:879F  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:87A0  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:87A1  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87A2  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87A3  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:87A4  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:87A5  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87A6  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87A7  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:87A8  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:87A9  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87AA  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87AB  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:87AC  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:87AD  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87AE  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87AF  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:87B0  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:87B1  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87B2  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87B3  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:87B4  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:87B5  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87B6  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87B7  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:87B8  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:87B9  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87BA  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87BB  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:87BC  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:87BD  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87BE  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87BF  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:87C0  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:87C1  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87C2  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87C3  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:87C4  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:87C5  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87C6  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87C7  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:87C8  00                .db 0
                                  .endif
                                  mf sthr0
       00:87C9  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:87CA  F3 86             .dw your_turn_to_win_0_em
                                  mf note, 72, 142, 0
       00:87CC  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87CD  48                .db 72
                                  .endif
                0001              .if (4 >= 3)
       00:87CE  8E                .db 142
                                  .endif
                0001              .if (4 >= 4)
       00:87CF  00                .db 0
                                  .endif
                                  mf rest, 72
       00:87D0  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:87D1  48                .db 72
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf sthr0
       00:87D2  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:87D3  E4 86             .dw your_turn_to_win_0_cmaj7
                                  mf note, 9, 213, 0
       00:87D5  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87D6  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87D7  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:87D8  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:87D9  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87DA  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87DB  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:87DC  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:87DD  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87DE  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87DF  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:87E0  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:87E1  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87E2  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87E3  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:87E4  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:87E5  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87E6  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87E7  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:87E8  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:87E9  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87EA  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87EB  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:87EC  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:87ED  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87EE  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87EF  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:87F0  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:87F1  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87F2  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87F3  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:87F4  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:87F5  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87F6  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87F7  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:87F8  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:87F9  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87FA  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87FB  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:87FC  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:87FD  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:87FE  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:87FF  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:8800  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:8801  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8802  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8803  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:8804  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:8805  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8806  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8807  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:8808  00                .db 0
                                  .endif
                                  mf note, 9, 190, 0
       00:8809  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:880A  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:880B  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:880C  00                .db 0
                                  .endif
                                  mf note, 9, 169, 0
       00:880D  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:880E  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:880F  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:8810  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:8811  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8812  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8813  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:8814  00                .db 0
                                  .endif
                                  mf sthr0
       00:8815  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:8816  F3 86             .dw your_turn_to_win_0_em
                                  mf note, 27, 113, 0
       00:8818  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8819  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:881A  71                .db 113
                                  .endif
                0001              .if (4 >= 4)
       00:881B  00                .db 0
                                  .endif
                                  mf note, 36, 142, 0
       00:881C  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:881D  24                .db 36
                                  .endif
                0001              .if (4 >= 3)
       00:881E  8E                .db 142
                                  .endif
                0001              .if (4 >= 4)
       00:881F  00                .db 0
                                  .endif
                                  mf rest, 9
       00:8820  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8821  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf sthr0
       00:8822  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:8823  66 87             .dw your_turn_to_win_0_c9
                                  mf rest, 72
       00:8825  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8826  48                .db 72
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf sthr3
       00:8827  2B                .db (mf_sthr3_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:8828  80 86             .dw your_turn_to_win_3b
                                  mf sthr0
       00:882A  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:882B  12 87             .dw your_turn_to_win_0_f
                                  mf note, 27, 106, 0
       00:882D  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:882E  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:882F  6A                .db 106
                                  .endif
                0001              .if (4 >= 4)
       00:8830  00                .db 0
                                  .endif
                                  mf note, 27, 127, 0
       00:8831  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8832  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:8833  7F                .db 127
                                  .endif
                0001              .if (4 >= 4)
       00:8834  00                .db 0
                                  .endif
                                  mf note, 18, 106, 0
       00:8835  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8836  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8837  6A                .db 106
                                  .endif
                0001              .if (4 >= 4)
       00:8838  00                .db 0
                                  .endif
                                  mf sthr0
       00:8839  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:883A  F3 86             .dw your_turn_to_win_0_em
                                  mf note, 27, 113, 0
       00:883C  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:883D  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:883E  71                .db 113
                                  .endif
                0001              .if (4 >= 4)
       00:883F  00                .db 0
                                  .endif
                                  mf note, 27, 142, 0
       00:8840  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8841  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:8842  8E                .db 142
                                  .endif
                0001              .if (4 >= 4)
       00:8843  00                .db 0
                                  .endif
                                  mf rest, 18
       00:8844  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8845  12                .db 18
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf sthr0
       00:8846  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:8847  21 87             .dw your_turn_to_win_0_dm7
                                  mf note, 27, 127, 0
       00:8849  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:884A  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:884B  7F                .db 127
                                  .endif
                0001              .if (4 >= 4)
       00:884C  00                .db 0
                                  .endif
                                  mf sthr0
       00:884D  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:884E  3C 87             .dw your_turn_to_win_0_g7
                                  mf note, 15, 160, 0
       00:8850  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8851  0F                .db 15
                                  .endif
                0001              .if (4 >= 3)
       00:8852  A0                .db 160
                                  .endif
                0001              .if (4 >= 4)
       00:8853  00                .db 0
                                  .endif
                                  mf note, 15, 142, 0
       00:8854  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8855  0F                .db 15
                                  .endif
                0001              .if (4 >= 3)
       00:8856  8E                .db 142
                                  .endif
                0001              .if (4 >= 4)
       00:8857  00                .db 0
                                  .endif
                                  mf note, 15, 127, 0
       00:8858  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8859  0F                .db 15
                                  .endif
                0001              .if (4 >= 3)
       00:885A  7F                .db 127
                                  .endif
                0001              .if (4 >= 4)
       00:885B  00                .db 0
                                  .endif
                                  mf sthr0
       00:885C  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:885D  D5 86             .dw your_turn_to_win_0_c
                                  mf note, 72, 142, 0
       00:885F  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8860  48                .db 72
                                  .endif
                0001              .if (4 >= 3)
       00:8861  8E                .db 142
                                  .endif
                0001              .if (4 >= 4)
       00:8862  00                .db 0
                                  .endif
                                  mf sthr0
       00:8863  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:8864  12 87             .dw your_turn_to_win_0_f
                                  mf note, 27, 106, 0
       00:8866  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8867  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:8868  6A                .db 106
                                  .endif
                0001              .if (4 >= 4)
       00:8869  00                .db 0
                                  .endif
                                  mf note, 27, 113, 0
       00:886A  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:886B  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:886C  71                .db 113
                                  .endif
                0001              .if (4 >= 4)
       00:886D  00                .db 0
                                  .endif
                                  mf note, 18, 127, 0
       00:886E  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:886F  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8870  7F                .db 127
                                  .endif
                0001              .if (4 >= 4)
       00:8871  00                .db 0
                                  .endif
                                  mf sthr0
       00:8872  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:8873  F3 86             .dw your_turn_to_win_0_em
                                  mf note, 27, 142, 0
       00:8875  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8876  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:8877  8E                .db 142
                                  .endif
                0001              .if (4 >= 4)
       00:8878  00                .db 0
                                  .endif
                                  mf note, 27, 160, 0
       00:8879  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:887A  1B                .db 27
                                  .endif
                0001              .if (4 >= 3)
       00:887B  A0                .db 160
                                  .endif
                0001              .if (4 >= 4)
       00:887C  00                .db 0
                                  .endif
                                  mf note, 18, 169, 0
       00:887D  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:887E  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:887F  A9                .db 169
                                  .endif
                0001              .if (4 >= 4)
       00:8880  00                .db 0
                                  .endif
                                  mf sthr0
       00:8881  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:8882  21 87             .dw your_turn_to_win_0_dm7
                                  mf note, 18, 190, 0
       00:8884  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8885  12                .db 18
                                  .endif
                0001              .if (4 >= 3)
       00:8886  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:8887  00                .db 0
                                  .endif
                                  mf note, 9, 213, 0
       00:8888  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8889  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:888A  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:888B  00                .db 0
                                  .endif
                                  mf sthr0
       00:888C  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:888D  3C 87             .dw your_turn_to_win_0_g7
                                  mf note, 9, 226, 0
       00:888F  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8890  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8891  E2                .db 226
                                  .endif
                0001              .if (4 >= 4)
       00:8892  00                .db 0
                                  .endif
                                  mf rest, 9
       00:8893  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:8894  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf note, 9, 190, 0
       00:8895  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:8896  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:8897  BE                .db 190
                                  .endif
                0001              .if (4 >= 4)
       00:8898  00                .db 0
                                  .endif
                                  mf sthr0
       00:8899  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:889A  D5 86             .dw your_turn_to_win_0_c
                                  mf note, 9, 213, 0
       00:889C  1B                .db (mf_note_loc - mft)*2 + 3
                0001              .if (4 >= 2)
       00:889D  09                .db 9
                                  .endif
                0001              .if (4 >= 3)
       00:889E  D5                .db 213
                                  .endif
                0001              .if (4 >= 4)
       00:889F  00                .db 0
                                  .endif
                                  mf rest, 9
       00:88A0  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:88A1  09                .db 9
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf sthr0
       00:88A2  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:88A3  D5 86             .dw your_turn_to_win_0_c
                                  mf rest, 36
       00:88A5  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:88A6  24                .db 36
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf sthr0
       00:88A7  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:88A8  57 87             .dw your_turn_to_win_0_g
                                  mf rest, 36
       00:88AA  07                .db (mf_rest_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:88AB  24                .db 36
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
                                  mf sthr0
       00:88AC  27                .db (mf_sthr0_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:88AD  E4 86             .dw your_turn_to_win_0_cmaj7
                                  mf sthr3
       00:88AF  2B                .db (mf_sthr3_loc - mft)*2 + 3
                0000              .if (1 >= 2)
                                  .endif
                0000              .if (1 >= 3)
                                  .endif
                0000              .if (1 >= 4)
                                  .endif
       00:88B0  35 86             .dw your_turn_to_win_3a
       00:88B2  4C 81 87          jmp your_turn_to_win_1
   75                     
   76  00:88B5            dance:
   77                             here
                                  mov #1, continue
                0000              .if 2 = ARG_REG
                                  .else
       00:88B5  A9 01             lda #1
       00:88B7  8D 1F 00          sta continue
                                  .endif
       00:88BA  20 3D 83          jsr yield_handler
   78                             mov #2, $8000
                0000              .if 2 = ARG_REG
                                  .else
       00:88BD  A9 02             lda #2
       00:88BF  8D 00 80          sta $8000
                                  .endif
   79                             mov #0, $8001
                0000              .if 2 = ARG_REG
                                  .else
       00:88C2  A9 00             lda #0
       00:88C4  8D 01 80          sta $8001
                                  .endif
   80                             thread_off 4
       00:88C7  AD 20 00          lda thread_mask
       00:88CA  29 EF             and #(~(1 << 4))
       00:88CC  8D 20 00          sta thread_mask
   81                             yhere
       00:88CF  20 3D 83          jsr yield_handler
   82                             mf del, #$03
       00:88D2  03                .db (mf_del_loc - mft)*2 + 3
                0001              .if (2 >= 2)
       00:88D3  03                .db #$03
                                  .endif
                0000              .if (2 >= 3)
                                  .endif
                0000              .if (2 >= 4)
                                  .endif
   83                             mov #2, $8000
                0000              .if 2 = ARG_REG
                                  .else
       00:88D4  A9 02             lda #2
       00:88D6  8D 00 80          sta $8000
                                  .endif
   84                             mov #1, $8001
                0000              .if 2 = ARG_REG
                                  .else
       00:88D9  A9 01             lda #1
       00:88DB  8D 01 80          sta $8001
                                  .endif
   85                             thread_off 4
       00:88DE  AD 20 00          lda thread_mask
       00:88E1  29 EF             and #(~(1 << 4))
       00:88E3  8D 20 00          sta thread_mask
   86                             yhere
       00:88E6  20 3D 83          jsr yield_handler
   87                             mov #2, $8000
                0000              .if 2 = ARG_REG
                                  .else
       00:88E9  A9 02             lda #2
       00:88EB  8D 00 80          sta $8000
                                  .endif
   88                             mov #2, $8001
                0000              .if 2 = ARG_REG
                                  .else
       00:88EE  A9 02             lda #2
       00:88F0  8D 01 80          sta $8001
                                  .endif
   89                             thread_off 4
       00:88F3  AD 20 00          lda thread_mask
       00:88F6  29 EF             and #(~(1 << 4))
       00:88F8  8D 20 00          sta thread_mask
   90                             yhere
       00:88FB  20 3D 83          jsr yield_handler
   91                             mov #2, $8000
                0000              .if 2 = ARG_REG
                                  .else
       00:88FE  A9 02             lda #2
       00:8900  8D 00 80          sta $8000
                                  .endif
   92                             mov #3, $8001
                0000              .if 2 = ARG_REG
                                  .else
       00:8903  A9 03             lda #3
       00:8905  8D 01 80          sta $8001
                                  .endif
   93                             thread_off 4
       00:8908  AD 20 00          lda thread_mask
       00:890B  29 EF             and #(~(1 << 4))
       00:890D  8D 20 00          sta thread_mask
   94                             yhere
       00:8910  20 3D 83          jsr yield_handler
   95  00:8913  4C B5 88          jmp dance
   96                     
   97  00:8916            vwait:
   98  00:8916  AD 02 20          lda $2002
   99  00:8919  10 FB             bpl vwait ; wait for start of retrace
  100  00:891B            .loop:
  101                     ;       lda $2002
  102                     ;       bmi .loop ; wait for end of retrace
  103                     
  104                             ; set scroll and PPU base address
  105                             mov #0, $2005
                0000              .if 2 = ARG_REG
                                  .else
       00:891B  A9 00             lda #0
       00:891D  8D 05 20          sta $2005
                                  .endif
  106                             mov #0, $2005
                0000              .if 2 = ARG_REG
                                  .else
       00:8920  A9 00             lda #0
       00:8922  8D 05 20          sta $2005
                                  .endif
  107                             mov #0, $2006
                0000              .if 2 = ARG_REG
                                  .else
       00:8925  A9 00             lda #0
       00:8927  8D 06 20          sta $2006
                                  .endif
  108                             mov #0, $2006
                0000              .if 2 = ARG_REG
                                  .else
       00:892A  A9 00             lda #0
       00:892C  8D 06 20          sta $2006
                                  .endif
  109  00:892F  60                rts
  110                     
  111  00:8930            draw_guy:
  112                             ppua bgptr
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov bgptr+1, $2006
                0000              .if 3 = ARG_REG
                                  .else
       00:8930  AD 25 00          lda bgptr+1
       00:8933  8D 06 20          sta $2006
                                  .endif
                                  mov bgptr, $2006
                0000              .if 6 = ARG_REG
                                  .else
       00:8936  AD 24 00          lda bgptr
       00:8939  8D 06 20          sta $2006
                                  .endif
                                  .endif
  113  00:893C  18                clc
  114                             mov #0, tmp
                0000              .if 2 = ARG_REG
                                  .else
       00:893D  A9 00             lda #0
       00:893F  8D 26 00          sta tmp
                                  .endif
  115  00:8942  A0 00             ldy #0
  116  00:8944                    .yl:
  117  00:8944  A2 00             ldx #0
  118  00:8946                    .xl:
  119  00:8946  AD 26 00          lda tmp
  120                             ppuw a
                                  mov a, $2007
                0001              .if 1 = ARG_REG
       00:8949  8D 07 20          sta $2007
                                  .else
                                  .endif
  121  00:894C  69 01             adc #1
  122  00:894E  8D 26 00          sta tmp
  123  00:8951  E8                inx
  124  00:8952  E0 08             cpx #8
  125  00:8954  D0 F0             bne .xl
  126                             add16 bgptr, #$20
       00:8956  18                clc
                0001              .if 2 = ARG_IMMED
       00:8957  AD 24 00          lda bgptr
       00:895A  69 20             adc #low(#$20)
       00:895C  8D 24 00          sta bgptr
       00:895F  AD 25 00          lda bgptr+1
       00:8962  69 00             adc #high(#$20)
       00:8964  8D 25 00          sta bgptr+1
                                  .else
                                  .endif
  127                             ppua bgptr
                0000              .if 6 = ARG_IMMED
                                  .else
                                  mov bgptr+1, $2006
                0000              .if 3 = ARG_REG
                                  .else
       00:8967  AD 25 00          lda bgptr+1
       00:896A  8D 06 20          sta $2006
                                  .endif
                                  mov bgptr, $2006
                0000              .if 6 = ARG_REG
                                  .else
       00:896D  AD 24 00          lda bgptr
       00:8970  8D 06 20          sta $2006
                                  .endif
                                  .endif
  128  00:8973  C8                iny
  129  00:8974  C0 08             cpy #8
  130  00:8976  D0 CC             bne .yl
  131  00:8978  60                rts
  132                     
  133                     
  134  00:8979            joystick1:
  135                             mov #1, $4016
                0000              .if 2 = ARG_REG
                                  .else
       00:8979  A9 01             lda #1
       00:897B  8D 16 40          sta $4016
                                  .endif
  136                             mov #0, $4016
                0000              .if 2 = ARG_REG
                                  .else
       00:897E  A9 00             lda #0
       00:8980  8D 16 40          sta $4016
                                  .endif
  137                             get_button joy1a
       00:8983  AD 16 40          lda $4016
       00:8986  29 01             and #1
       00:8988  8D 27 00          sta joy1a
  138                             get_button joy1b
       00:898B  AD 16 40          lda $4016
       00:898E  29 01             and #1
       00:8990  8D 28 00          sta joy1b
  139                             get_button joy1select
       00:8993  AD 16 40          lda $4016
       00:8996  29 01             and #1
       00:8998  8D 29 00          sta joy1select
  140                             get_button joy1start
       00:899B  AD 16 40          lda $4016
       00:899E  29 01             and #1
       00:89A0  8D 2A 00          sta joy1start
  141                             get_button joy1up
       00:89A3  AD 16 40          lda $4016
       00:89A6  29 01             and #1
       00:89A8  8D 2B 00          sta joy1up
  142                             get_button joy1down
       00:89AB  AD 16 40          lda $4016
       00:89AE  29 01             and #1
       00:89B0  8D 2C 00          sta joy1down
  143                             get_button joy1left
       00:89B3  AD 16 40          lda $4016
       00:89B6  29 01             and #1
       00:89B8  8D 2D 00          sta joy1left
  144                             get_button joy1right
       00:89BB  AD 16 40          lda $4016
       00:89BE  29 01             and #1
       00:89C0  8D 2E 00          sta joy1right
  145  00:89C3  60                rts
#[1]   demo.nas
#[2]   footer.nas
    4                             .include "footer.nas"
    1           0001              .bank 1
    2           E000              .org $e000
    3                     
    4  01:E000            nmi:
    5  01:E000  40                rti
    6  01:E001            irq:
    7  01:E001  40                rti
    8                     
    9           FFFA              .org $fffa
   10  01:FFFA  00 E0             .dw nmi, start, irq
       01:FFFC  4B 83     
       01:FFFE  01 E0     
   11                     
   12           0002              .bank 2
   13  02:0000                    .incbin "guy.chr"
   14  02:1000                    .incbin "guy.chr"
#[1]   demo.nas
